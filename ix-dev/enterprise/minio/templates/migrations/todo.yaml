paths:
  - from: minioCreds.rootUser
    to: creds.access_key
  - from: minioCreds.rootPassword
    to: creds.secret_key
  - from: minioRunAs.user
    to: run_as.user
  - from: minioRunAs.group
    to: run_as.group
  - from: minioNetwork.certificateID
    to: network.certificate_id
  - from: minioNetwork.apiPort
    to: network.api_port
  - from: minioNetwork.webPort
    to: network.console_port
  - from: minioNetwork.serverURL
    to: network.server_url
  - from: minioNetwork.consoleURL
    to: network.console_url
  - from: minioNetwork.hostNetwork
    to: "" # Enabling this will break the db - logsearch - minio comms as they are not on the same network
  - from: minioStorage[]
    to: storage.data_dirs[] # Check nested keys structure here
  - from: enableMultiMode
    to: multi_mode.enabled
  - from: minioMultiMode[]
    to: multi_mode.entries[]
  - from: minioLogging.anonymous
    to: logging.anonymous
  - from: minioLogging.quiet
    to: logging.quiet
  - from: minioLogging.logseartch.enabled
    to: logsearch.enabled
  - from: minioLogging.logseartch.diskCapacityGB
    to: logsearch.disk_capacity_gb
  - from: <logsearch secret> # This needs to be fetched from the k8s secret
    to: logsearch.postgres_password
  - from: minioLogging.logseartch.pgData
    to: logsearch.postgres_data # Check nested keys structure here
  - from: minioLogging.logseartch.pgBackup
    to: "" # Currently no way to do a pre-upgrade sql dump for postgres
  - from: resources.limits.cpus
    to: resources.limits.cpus
  - from: resources.limits.memory
    to: resources.limits.memory
