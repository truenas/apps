#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "minio": {
            "credentials": {
                "access_key": config["minioCreds"]["rootUser"],
                "secret_key": config["minioCreds"]["rootPass"],
            },
            "logging": {
                "quiet": config["minioLogging"]["quiet"],
                "anonymous": config["minioLogging"]["anonymous"],
            },
            "multi_mode": {
                "enabled": config["enableMultiMode"],
                "entries": config.get("minioMultiMode", []),
            },
        },
        "run_as": {
            "user": config["minioRunAs"].get("user", 568),
            "group": config["minioRunAs"].get("group", 568),
        },
        "network": {
            "api_port": config["minioNetwork"]["apiPort"],
            "console_port": config["minioNetwork"]["webPort"],
            "host_network": config["minioNetwork"]["hostNetwork"],
            "certificate_id": config["minioNetwork"].get("certificateID", None),
            "server_url": config["minioNetwork"]["serverUrl"],
            "console_url": config["minioNetwork"]["consoleUrl"],
        },
        "storage": {
            "data_dirs": [migrate_storage_item(item) for item in config["minioStorage"]]
        },
        "resources": migrate_resources(config["resources"]),
    }

    return new_values


if __name__ == "__main__":

    cfg = {
        "helm_secret": {
            "config": {
                "enableMultiMode": True,
                "global": {
                    "ixChartContext": {
                        "addNvidiaRuntimeClass": False,
                        "hasNFSCSI": True,
                        "hasSMBCSI": True,
                        "isInstall": True,
                        "isStopped": False,
                        "isUpdate": False,
                        "isUpgrade": False,
                        "kubernetes_config": {
                            "cluster_cidr": "172.16.0.0/16",
                            "cluster_dns_ip": "172.17.0.10",
                            "service_cidr": "172.17.0.0/16",
                        },
                        "nfsProvisioner": "nfs.csi.k8s.io",
                        "nvidiaRuntimeClassName": "nvidia",
                        "operation": "INSTALL",
                        "smbProvisioner": "smb.csi.k8s.io",
                        "storageClassName": "ix-storage-class-minio",
                        "upgradeMetadata": {},
                    }
                },
                "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "minio/minio",
                    "tag": "RELEASE.2023-12-07T04-16-00Z",
                },
                "ixCertificateAuthorities": {},
                "ixCertificates": {},
                "ixChartContext": {
                    "addNvidiaRuntimeClass": False,
                    "hasNFSCSI": True,
                    "hasSMBCSI": True,
                    "isInstall": True,
                    "isStopped": False,
                    "isUpdate": False,
                    "isUpgrade": False,
                    "kubernetes_config": {
                        "cluster_cidr": "172.16.0.0/16",
                        "cluster_dns_ip": "172.17.0.10",
                        "service_cidr": "172.17.0.0/16",
                    },
                    "nfsProvisioner": "nfs.csi.k8s.io",
                    "nvidiaRuntimeClassName": "nvidia",
                    "operation": "INSTALL",
                    "smbProvisioner": "smb.csi.k8s.io",
                    "storageClassName": "ix-storage-class-minio",
                    "upgradeMetadata": {},
                },
                "ixExternalInterfacesConfiguration": [],
                "ixExternalInterfacesConfigurationNames": [],
                "ixVolumes": [
                    {
                        "hostPath": "/mnt/fastpool/ix-applications/releases/minio/volumes/ix_volumes/data1"
                    },
                    {
                        "hostPath": "/mnt/fastpool/ix-applications/releases/minio/volumes/ix_volumes/data2"
                    },
                ],
                "logsearchImage": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "minio/operator",
                    "tag": "v4.5.8",
                },
                "minioCreds": {"rootPass": "asdfasdf", "rootUser": "asdfasdf"},
                "minioLogging": {
                    "anonymous": False,
                    "logsearch": {
                        "diskCapacityGB": 5,
                        "enabled": False,
                        "pgBackup": {
                            "ixVolumeConfig": {"datasetName": "postgres-backup"},
                            "type": "ixVolume",
                        },
                        "pgData": {
                            "ixVolumeConfig": {"datasetName": "postgres-data"},
                            "type": "ixVolume",
                        },
                    },
                    "quiet": False,
                },
                "minioMultiMode": ["/data{1...3}"],
                "minioNetwork": {
                    "apiPort": 30000,
                    "certificateID": None,
                    "consoleUrl": "http://10.20.30.230:30001",
                    "hostNetwork": True,
                    "serverUrl": "http://10.20.30.230:30000",
                    "webPort": 30001,
                },
                "minioRunAs": {"group": 568, "user": 568},
                "minioStorage": [
                    {
                        "ixVolumeConfig": {
                            "aclEnable": False,
                            "datasetName": "data1",
                        },
                        "mountPath": "/data1",
                        "type": "ixVolume",
                    },
                    {
                        "ixVolumeConfig": {
                            "aclEnable": False,
                            "datasetName": "data2",
                        },
                        "mountPath": "/data2",
                        "type": "ixVolume",
                    },
                    {
                        "hostPathConfig": {
                            "aclEnable": False,
                            "hostPath": "/mnt/fastpool/vms",
                        },
                        "mountPath": "/data3",
                        "type": "hostPath",
                    },
                ],
                "release_name": "minio",
                "resources": {"limits": {"cpu": "4000m", "memory": "8Gi"}},
            },
        },
    }
    print(yaml.dump(migrate(cfg)))
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
