# groups:
#   - name: MinIO Credentials
#     description: Configure Credentials for MinIO
#   - name: User and Group Configuration
#     description: Configure User and Group for MinIO
#   - name: Network Configuration
#     description: Configure Network for MinIO
#   - name: Storage Configuration
#     description: Configure Storage for MinIO
#   - name: MultiMode Configuration
#     description: Configure MultiMode for MinIO
#   - name: MinIO Logging
#     description: Configure Logging for MinIO
#   - name: Resources Configuration
#     description: Configure Resources for MinIO

questions:
  - variable: minio
    label: ""
    group: MinIO Configuration
    schema:
      type: dict
      attrs:
        - variable: access_key
          label: Access Key
          description: The access key for the root user.
          schema:
            type: string
            min_length: 5
            required: true
            private: true
        - variable: secret_key
          label: Secret Key
          description: The secret key for the root user.
          schema:
            type: string
            min_length: 8
            required: true
            private: true
        - variable: server_url
          label: Server URL
          description: |
            The URL that console will use to reach API</br>
            For example https://minio1.example.com.</br></br>
          schema:
            type: string
            required: true
        - variable: console_url
          label: Console URL
          description: |
            The URL that console will provide as a redirect URL</br>
            For example https://console.example.com.</br></br>
          schema:
            type: string
            required: true
        - variable: user
          label: User ID
          description: The user id that MinIO will run as.
          schema:
            type: int
            min: 568
            default: 568
            required: true
        - variable: group
          label: Group ID
          description: The group id that MinIO will run as.
          schema:
            type: int
            min: 568
            default: 568
            required: true
        - variable: logging
          label: Logging
          description: Logging configuration
          schema:
            type: dict
            attrs:
              - variable: quiet
                label: Quiet
                description: Disables startup information.
                schema:
                  type: boolean
                  default: false
              - variable: anonymous
                label: Anonymous
                description: Hides sensitive information from logging.
                schema:
                  type: boolean
                  default: false
        - variable: logsearch
          label: LogSearch Configuration
          description: LogSearch Configuration
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: Enabled
                description: Enable LogSearch
                schema:
                  type: boolean
                  default: false
              - variable: disk_capacity_gb
                label: Disk Capacity
                description: The disk capacity for LogSearch
                schema:
                  type: int
                  show_if: [["enabled", "=", true]]
                  default: 10
                  min: 1
              - variable: postgres_password
                label: Postgres Password
                description: The password for Postgres
                schema:
                  type: string
                  show_if: [["enabled", "=", true]]
                  min_length: 8
                  required: true
                  private: true

  - variable: network
    label: ""
    group: Network Configuration
    schema:
      type: dict
      attrs:
        - variable: api_port
          label: API Port
          description: The port for the MinIO API.
          schema:
            type: int
            default: 30000
            min: 9000
            max: 65535
            required: true
        - variable: console_port
          label: Console Port (Web UI)
          description: The port for the MinIO Web UI.
          schema:
            type: int
            default: 30001
            min: 9000
            max: 65535
            required: true
        #       - variable: hostNetwork
        #         label: Host Network
        #         description: |
        #           Bind to the host network. It's recommended to keep this disabled.</br>
        #         schema:
        #           type: boolean
        #           default: true
        - variable: certificate_id
          label: Certificate
          description: The certificate to use for MinIO
          schema:
            type: int
            "null": true
            $ref:
              - "definitions/certificate"

  # - variable: enableMultiMode
  #   label: Enable Multi Mode (SNMD or MNMD)
  #   group: MultiMode Configuration
  #   description: |
  #     For Single Node Multi Drive (SNMD), the entry will look like this:</br>
  #     Example Entry - /data{1...4}</br></br>
  #     For Multi Node Multi Drive (MNMD), the entry will look like this:</br>
  #     Example Entry - https://minio{1...3}.example.com:30000/data{1...4}</br></br>
  #     Note that each host must use the same port number and the same number of storage items.</br>
  #     In both cases /data{1...4} is the directories to be used for MinIO.
  #     You have to add additional storage for each data entry.
  #   schema:
  #     type: boolean
  #     default: false
  #     show_subquestions_if: true
  #     subquestions:
  #       - variable: minioMultiMode
  #         label: Multi Mode (SNMD or MNMD)
  #         group: MultiMode Configuration
  #         schema:
  #           type: list
  #           default: []
  #           items:
  #             - variable: item
  #               label: ""
  #               schema:
  #                 type: string
  #                 required: true

  # - variable: minioStorage
  #   label: ""
  #   group: Storage Configuration
  #   schema:
  #     type: list
  #     default: [{"type": "ixVolume", "mountPath": "/data1", "datasetName": "data1"}]
  #     empty: false
  #     required: true
  #     items:
  #       - variable: item
  #         label: Storage Item
  #         schema:
  #           type: dict
  #           attrs:
  #             - variable: type
  #               label: Type
  #               description: |
  #                 ixVolume: Is dataset created automatically by the system.</br>
  #                 Host Path: Is a path that already exists on the system.
  #               schema:
  #                 type: string
  #                 immutable: true
  #                 required: true
  #                 default: ixVolume
  #                 enum:
  #                   - value: hostPath
  #                     description: Host Path (Path that already exists on the system)
  #                   - value: ixVolume
  #                     description: ixVolume (Dataset created automatically by the system)
  #             - variable: mountPath
  #               label: Mount Path
  #               description: The path inside the container to mount the storage.
  #               schema:
  #                 type: path
  #                 required: true
  #                 immutable: true
  #                 default: /data1
  #             - variable: ixVolumeConfig
  #               label: ixVolume Configuration
  #               description: The configuration for the ixVolume dataset.
  #               schema:
  #                 type: dict
  #                 show_if: [["type", "=", "ixVolume"]]
  #                 $ref:
  #                   - "normalize/ixVolume"
  #                 attrs:
  #                   - variable: aclEnable
  #                     label: Enable ACL
  #                     description: Enable ACL for the dataset.
  #                     schema:
  #                       type: boolean
  #                       # Hide ACL for now
  #                       hidden: true
  #                       default: false
  #                   - variable: datasetName
  #                     label: Dataset Name
  #                     description: The name of the dataset to use for storage.
  #                     schema:
  #                       type: string
  #                       required: true
  #                       immutable: true
  #                       default: "data1"
  #                   - variable: aclEntries
  #                     label: ACL Configuration
  #                     schema:
  #                       type: dict
  #                       show_if: [["aclEnable", "=", true]]
  #                       attrs: []
  #             - variable: hostPathConfig
  #               label: Host Path Configuration
  #               schema:
  #                 type: dict
  #                 show_if: [["type", "=", "hostPath"]]
  #                 attrs:
  #                   - variable: aclEnable
  #                     label: Enable ACL
  #                     description: Enable ACL for the dataset.
  #                     schema:
  #                       type: boolean
  #                       # Hide ACL for now
  #                       hidden: true
  #                       default: false
  #                   - variable: acl
  #                     label: ACL Configuration
  #                     schema:
  #                       type: dict
  #                       show_if: [["aclEnable", "=", true]]
  #                       attrs: []
  #                       $ref:
  #                         - "normalize/acl"
  #                   - variable: hostPath
  #                     label: Host Path
  #                     description: The host path to use for storage.
  #                     schema:
  #                       type: hostpath
  #                       show_if: [["aclEnable", "=", false]]
  #                       required: true

  # - variable: resources
  #   label: ""
  #   group: Resources Configuration
  #   schema:
  #     type: dict
  #     attrs:
  #       - variable: limits
  #         label: Limits
  #         schema:
  #           type: dict
  #           attrs:
  #             - variable: cpu
  #               label: CPU
  #               description: CPU limit for MinIO.
  #               schema:
  #                 type: string
  #                 max_length: 6
  #                 valid_chars: '^(0\.[1-9]|[1-9][0-9]*)(\.[0-9]|m?)$'
  #                 valid_chars_error: |
  #                   Valid CPU limit formats are</br>
  #                   - Plain Integer - eg. 1</br>
  #                   - Float - eg. 0.5</br>
  #                   - Milicpu - eg. 500m
  #                 default: "4000m"
  #                 required: true
  #             - variable: memory
  #               label: Memory
  #               description: Memory limit for MinIO.
  #               schema:
  #                 type: string
  #                 max_length: 12
  #                 valid_chars: '^[1-9][0-9]*([EPTGMK]i?|e[0-9]+)?$'
  #                 valid_chars_error: |
  #                   Valid Memory limit formats are</br>
  #                   - Suffixed with E/P/T/G/M/K - eg. 1G</br>
  #                   - Suffixed with Ei/Pi/Ti/Gi/Mi/Ki - eg. 1Gi</br>
  #                   - Plain Integer in bytes - eg. 1024</br>
  #                   - Exponent - eg. 134e6
  #                 default: "8Gi"
  #                 required: true
