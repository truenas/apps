{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.pihole_container_name, "image") %}

{% do c1.set_user(0, 0) %}
{% do c1.add_caps(["NET_ADMIN", "NET_RAW", "NET_BIND_SERVICE", "CHOWN", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID", "SETFCAP", "SETPCAP", "KILL", "SYS_NICE"]) %}
{% do c1.remove_security_opt("no-new-privileges") %}

{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port, "path": "/admin/login.php"}) %}

{% do c1.environment.add_env("WEB_PORT", values.network.web_port) %}
{% do c1.environment.add_env("WEBPASSWORD", values.pihole.web_password) %}
{% if values.network.get('dhcp_config', {}).get('dhcp_enabled', false) %}
  {% do c1.environment.add_env("DHCP_ACTIVE", "true") %}
  {% do c1.environment.add_env("DHCP_START", values.network.dhcp_config.start) %}
  {% do c1.environment.add_env("DHCP_END", values.network.dhcp_config.end) %}
  {% do c1.environment.add_env("DHCP_ROUTER", values.network.dhcp_config.gateway) %}
{% endif %}
{% if values.network.host_network and values.network.interface_name %}
  {% do c1.environment.add_env("INTERFACE", values.network.interface_name) %}
{% endif %}

{% do c1.environment.add_user_envs(values.pihole.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
  {% do c1.ports.add_port(values.network.dns_port, 53) %}
  {% do c1.ports.add_port(values.network.dns_port, 53, {"protocol": "udp"}) %}
{% endif %}

{% do c1.add_storage("/etc/pihole", values.storage.config) %}
{% do c1.add_storage("/etc/dnsmasq.d", values.storage.dnsmasq) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "path": "/admin/"}) %}

{{ tpl.render() | tojson }}
