{% set tpl = ix_lib.base.render.Render(values) %}

{% set proto = "https" if values.network.certificate_id else "http" %}

{% set c1 = tpl.add_container(values.consts.elastic_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.user_id, "gid": values.consts.group_id, "mode": "check"} %}

{% do c1.set_user(values.consts.user_id, values.consts.group_id) %}

{% do c1.healthcheck.set_test("curl", {
  "port": values.network.web_port, "path": "/_cluster/health?local=true",
  "scheme": proto, "headers": [("Authorization", tpl.funcs.basic_auth_header("elastic", values.elastic.password))]
}) %}

{% do c1.environment.add_env("ES_HEAP_SIZE", values.elastic.heap_size) %}
{% do c1.environment.add_env("ELASTIC_PASSWORD", values.elastic.password) %}
{% do c1.environment.add_env("ES_SETTING_HTTP_PORT", values.network.web_port) %}
{% do c1.environment.add_env("ES_SETTING_NODE_NAME", values.elastic.node_name) %}
{% do c1.environment.add_env("ES_SETTING_DISCOVERY_TYPE", "single-node") %}
{% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_ENABLED", true) %}
{% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_ENABLED", false) %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.tls_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.tls_cert_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.tls_ca_path) %}

  {% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_HTTP_SSL_ENABLED", true) %}
  {% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_HTTP_SSL_KEY", values.consts.tls_key_path) %}
  {% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE", values.consts.tls_cert_path) %}
  {% do c1.environment.add_env("ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE__AUTHORITIES", values.consts.tls_ca_path) %}
{% endif %}

{% do c1.environment.add_user_envs(values.elastic.additional_envs) %}
{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.add_storage("/usr/share/elasticsearch/config/certs", {"type": "anonymous"}) %}

{% do c1.add_storage("/usr/share/elasticsearch/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "schema": proto}) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}
