{% set tpl = ix_lib.base.render.Render(values) %}

{% set reserved_args = ["--no-autoupdate", "tunnel", "run"] %}
{% if values.cloudflared.additional_args != values.cloudflared.additional_args|unique|list %}
  {% do tpl.funcs.fail("Cloudflared [cloudflared.additional_args] contains duplicate values [%s], please remove them" | format(values.cloudflared.additional_args|join(', '))) %}
{% endif %}
{% for arg in values.cloudflared.additional_args %}
  {% if arg in reserved_args %}
    {% do tpl.funcs.fail("Cloudflared already inserts [%s] as an argument, please remove it from [cloudflared.additional_args]" | format(arg)) %}
  {% endif %}
{% endfor %}

{% set c1 = tpl.add_container(values.consts.cloudflared_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.disable() %}
{% set cmd = namespace(x=["tunnel", "--no-autoupdate"]) %}
{% if values.ci %}
  {% do cmd.x.append("--hello-world") %}
{% else %}
  {% do cmd.x.extend(values.cloudflared.additional_args) %}
  {% do cmd.x.append("run") %}
{% endif %}

{% do c1.set_command(cmd.x) %}

{% do c1.environment.add_env("TUNNEL_TOKEN", values.cloudflared.tunnel_token) %}
{% do c1.environment.add_user_envs(values.cloudflared.additional_envs) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
