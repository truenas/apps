{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.arm_container_name, "image") %}

{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETUID", "SETGID",]) %}
{% do c1.healthcheck.set_custom_test("/healthcheck.sh") %}

{% if values.arm.cd_devices %}{% do c1.add_group(24) %}{% endif %}
{% for cd in values.arm.cd_devices %}
  {% do c1.add_device(cd.host_device, cd.container_device) %}
{% endfor %}

{% do c1.environment.add_env("ARM_UID", values.run_as.user) %}
{% do c1.environment.add_env("ARM_GID", values.run_as.group) %}
{% do c1.environment.add_user_envs(values.arm.additional_envs) %}

{% do c1.add_port(values.network.web_port, {"container_port": 8080}) %}

{% do c1.add_storage("/home/arm", values.storage.home) %}
{% do c1.add_storage("/home/arm/music", values.storage.music) %}
{% do c1.add_storage("/home/arm/logs", values.storage.logs) %}
{% do c1.add_storage("/home/arm/media", values.storage.media) %}
{% do c1.add_storage("/etc/arm/config", values.storage.config) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": 8080 if values.network.host_network else values.network.web_port.port_number}) %}

{{ tpl.render() | tojson }}
