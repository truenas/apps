{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.node_red_container_name, values.node_red.image_selector) %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.run_user, "gid": values.consts.run_group, "mode": "check"} %}

{% do c1.set_user(values.consts.run_user, values.consts.run_group) %}
{% do c1.healthcheck.set_custom_test("NODE_OPTIONS=--dns-result-order=ipv4first node /healthcheck.js") %}

{% do c1.environment.add_env("PORT", values.network.web_port) %}
{% do c1.environment.add_env("NODE_RED_ENABLE_SAFE_MODE", values.node_red.enable_safe_mode) %}
{% do c1.environment.add_env("NODE_RED_ENABLE_PROJECTS", values.node_red.enable_projects) %}
{% do c1.environment.add_user_envs(values.node_red.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
{% for port in values.network.additional_ports %}
  {% do c1.ports.add_port(port.target, port.published, {"protocol": port.protocol}) %}
{% endfor %}

{% do c1.add_storage("/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perm_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
