{% from "macros/entrypoint.sh" import entrypoint %}
{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.forgejo_runner_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_custom_test("pgrep forgejo-runner") %}
{% do c1.add_extra_host("host.docker.internal", "host-gateway") %}
{% do c1.configs.add("entrypoint", entrypoint(values), "/ix-entrypoint.sh", "0755") %}
{% do c1.set_entrypoint(["/bin/sh", "-c", "/ix-entrypoint.sh"]) %}

{% do c1.environment.add_user_envs(values.forgejo_runner.additional_envs) %}

{% for port in values.network.additional_ports %}
  {% do c1.add_port(port) %}
{% endfor %}

{% do c1.add_docker_socket(read_only=False) %}

{% do c1.add_storage("/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
