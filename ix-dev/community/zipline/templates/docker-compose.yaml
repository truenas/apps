{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.zipline_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.zipline.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.zipline.postgres_image_selector,
  pg_config, perm_container
) %}

{% set proto = "https" if values.network.certificate_id else "http" %}
{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/api/healthcheck", "scheme": proto}) %}

{% do c1.environment.add_env("DATASOURCE_TYPE", "local") %}
{% do c1.environment.add_env("DATASOURCE_LOCAL_DIRECTORY", values.consts.uploads_path) %}
{% do c1.environment.add_env("CORE_PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("DATABASE_URL", postgres.get_url("postgres")) %}
{% do c1.environment.add_env("CORE_SECRET", values.zipline.core_secret) %}

{% if values.network.certificate_id %}
  {% do c1.environment.add_env("SSL_KEY", values.consts.ssl_key_path) %}
  {% do c1.environment.add_env("SSL_CERT", values.consts.ssl_cert_path) %}

  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}
{% endif %}

{% do c1.environment.add_user_envs(values.zipline.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.uploads_path, values.storage.uploads) %}
{% do perm_container.add_or_skip_action("uploads", values.storage.uploads, perms_config) %}

{% do c1.add_storage("/zipline/public", values.storage.public) %}
{% do perm_container.add_or_skip_action("public", values.storage.public, perms_config) %}

{% do c1.add_storage("/zipline/themes", values.storage.themes) %}
{% do perm_container.add_or_skip_action("themes", values.storage.themes, perms_config) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port.port_number, "scheme": proto}) %}

{{ tpl.render() | tojson }}
