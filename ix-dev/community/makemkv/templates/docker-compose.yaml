{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.makemkv_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.user_id, "gid": values.consts.group_id, "mode": "check"} %}

{% do c1.add_storage("/dev", {"type": "host_path", "read_only": True, "host_path_config": {"path": "/dev"}}) %}
{% do c1.add_storage(values.consts.config_dir, values.storage.config) %}
{% do c1.add_storage("/output", values.storage.output) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% if not values.network.host_network %}
  {% do c1.add_port(values.network.web_port, {"container_port": values.consts.internal_web_port}) %}
{% endif %}

{% do c1.environment.add_user_envs(values.makemkv.additional_envs) %}
{% do c1.environment.add_env("WEB_LISTENING_PORT", values.consts.internal_web_port) %}

{% do c1.healthcheck.set_test("curl", {"port": values.consts.internal_web_port}) %}

{% do tpl.portals.add(values.network.web_port, {"port": values.consts.internal_web_port if values.network.host_network else None}) %}

#{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}
