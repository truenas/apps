{% from "macros/config.sh" import setup %}
{% from "macros/config.js" import setup as setup_js %}

{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.wiki_js_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.wiki_js.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}

{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, values.wiki_js.postgres_image_selector, pg_config, perm_container) %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do c1.healthcheck.set_test("curl", {"port": values.network.http_port.port_number, "path": "/healthz"}) %}

{% do c1.configs.add("config.js", setup_js(values), "/wiki/server/ix-config.js") %}
{% do c1.configs.add("config.sh", setup(values), "/ix-entrypoint.sh", "0755") %}
{% do c1.set_entrypoint(["/ix-entrypoint.sh"]) %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.environment.add_user_envs(values.wiki_js.additional_envs) %}

{% do c1.add_port(values.network.http_port) %}
{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}
  {% do c1.add_port(values.network.https_port) %}
  {% do tpl.portals.add(values.network.https_port, {"name": "HTTPS", "scheme": "https"}) %}
{% endif %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.http_port, {"name": "HTTP"}) %}

{{ tpl.render() | tojson }}
