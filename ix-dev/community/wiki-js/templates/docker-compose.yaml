{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.wiki_js_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.wiki_js_db_user,
  "password": values.wiki_js.db_password,
  "database": values.consts.wiki_js_db_name,
  "volume": values.storage.postgres_data,
} %}

{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.home_assistant.postgres_image_selector,
  pg_config, perm_container
) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}

{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/manifest.json", "scheme": proto, "spider": false}) %}
{% do c1.environment.add_user_envs(values.wiki_js.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}
{% for port in values.network.additional_ports %}
  {% do c1.add_port(port) %}
{% endfor %}

{% do c1.add_storage("/var/lib/postgresql/data", values.storage.postgres_data) %}
{% do c1.add_storage(values.consts.config_path, values.storage.config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port, {"scheme": proto}) %}

{{ tpl.render() | tojson }}
