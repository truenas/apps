{% from "macros/init.sh.jinja" import init_script %}

{% set tpl = ix_lib.base.render.Render(values) %}

{% set init = tpl.add_container(values.consts.init_container_name, "image") %}
{% do init.set_user(values.run_as.user, values.run_as.group) %}
{% do init.healthcheck.disable() %}
{% do init.remove_devices() %}
{% do init.restart.set_policy("on-failure", 1) %}
{% do init.deploy.resources.set_profile("low") %}
{% do init.set_entrypoint(["/bin/sh", "-c", "/init-script.sh"]) %}
{% do init.configs.add("init-script", init_script(values), "/init-script.sh", "0755") %}

{% set c1 = tpl.add_container(values.consts.ipfs_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.depends.add_dependency(values.consts.init_container_name, "service_completed_successfully") %}
{# https://github.com/ipfs/kubo/blob/8f638dcbcd875ecff92021e4b62d0af8848022ce/Dockerfile#L116 #}
{% do c1.healthcheck.set_custom_test("ipfs dag stat /ipfs/QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn") %}

{% do c1.environment.add_user_envs(values.ipfs.additional_envs) %}

{% do c1.ports.add_port(values.network.api_port, values.network.api_port) %}
{% do c1.ports.add_port(values.network.gateway_port, values.network.gateway_port) %}
{% do c1.ports.add_port(values.network.swarm_port, values.network.swarm_port) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do init.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% do c1.add_storage("/export", values.storage.staging) %}
{% do perm_container.add_or_skip_action("export", values.storage.staging, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do init.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.api_port}) %}

{{ tpl.render() | tojson }}
