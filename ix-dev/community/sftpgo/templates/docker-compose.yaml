{% set tpl = ix_lib.base.render.Render(values) %}

{% if values.network.ftpd_services %}
  {% if values.network.ftpd_passive_port_range.start and values.network.ftpd_passive_port_range.end and values.network.ftpd_passive_port_range.start > values.network.ftpd_passive_port_range.end %}
    {% do tpl.funcs.fail("Expected [network.ftpd_passive_port_range.start] to be less than [network.ftpd_passive_port_range.end], but got [%d] and [%d]" | format(values.network.ftpd_passive_port_range.start, values.network.ftpd_passive_port_range.end)) %}
  {% endif %}
{% endif %}

{% set proto = "https" if values.network.certificate_id else "http" %}

{% set c1 = tpl.add_container(values.consts.sftpgo_container_name, values.sftpgo.image_selector) %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.set_grace_period(values.sftpgo.stop_grace_period) %}
{% do c1.healthcheck.set_custom_test("SFTPGO_HTTP__SKIP_TLS_VERIFY=true sftpgo ping") %}

{% do c1.environment.add_env("SFTPGO_CONFIG_DIR", values.consts.config_dir_path) %}
{% do c1.environment.add_env("SFTPGO_DATA_PROVIDER__USERS_BASE_DIR", values.consts.data_dir_path) %}
{% do c1.environment.add_env("SFTPGO_DATA_PROVIDER__BACKUPS_PATH", values.consts.backups_dir_path) %}
{% do c1.environment.add_env("SFTPGO_GRACE_TIME", values.sftpgo.stop_grace_period) %}
{% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__PORT", values.network.web_port) %}
{% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__ADDRESS", "") %}
{% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__ENABLE_WEB_ADMIN", true) %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}

  {% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__ENABLE_HTTPS", true) %}
  {% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__CERTIFICATE_FILE", values.consts.ssl_cert_path) %}
  {% do c1.environment.add_env("SFTPGO_HTTPD__BINDINGS__0__CERTIFICATE_KEY_FILE", values.consts.ssl_key_path) %}
{% endif %}

{% do c1.environment.add_user_envs(values.sftpgo.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% for svc in values.network.sftpd_services if svc.enabled %}
  {% do c1.ports.add_port(svc.port, svc.port) %}
  {% do c1.environment.add_env("SFTPGO_SFTPD__BINDINGS__%d__PORT"|format(loop.index0), svc.port) %}
  {% do c1.environment.add_env("SFTPGO_SFTPD__BINDINGS__%d__ADDRESS"|format(loop.index0), "") %}
{% endfor %}

{% for svc in values.network.ftpd_services if svc.enabled %}
  {% do c1.ports.add_port(svc.port, svc.port) %}
  {% do c1.environment.add_env("SFTPGO_FTPD__BINDINGS__%d__PORT"|format(loop.index0), svc.port) %}
  {% do c1.environment.add_env("SFTPGO_FTPD__BINDINGS__%d__ADDRESS"|format(loop.index0), "") %}
{% endfor %}

{% for svc in values.network.webdavd_services if svc.enabled %}
  {% do c1.ports.add_port(svc.port, svc.port) %}
  {% do c1.environment.add_env("SFTPGO_WEBDAVD__BINDINGS__%d__PORT"|format(loop.index0), svc.port) %}
  {% do c1.environment.add_env("SFTPGO_WEBDAVD__BINDINGS__%d__ADDRESS"|format(loop.index0), "") %}
{% endfor %}

{% if values.network.ftpd_services %}
  {% do c1.environment.add_env("SFTPGO_FTPD__PASSIVE_PORT_RANGE__START", values.network.ftpd_passive_port_range.start) %}
  {% do c1.environment.add_env("SFTPGO_FTPD__PASSIVE_PORT_RANGE__END", values.network.ftpd_passive_port_range.end) %}
  {% for port in range(values.network.ftpd_passive_port_range.start, values.network.ftpd_passive_port_range.end+1) %}
    {% do c1.ports.add_port(port, port) %}
  {% endfor %}
{% endif %}

{% do c1.add_storage(values.consts.config_dir_path, values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perms_config) %}

{% do c1.add_storage(values.consts.data_dir_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% do c1.add_storage(values.consts.backups_dir_path, values.storage.backups) %}
{% do perm_container.add_or_skip_action("backups", values.storage.backups, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "path": "/web/admin", "scheme": proto}) %}

{{ tpl.render() | tojson }}
