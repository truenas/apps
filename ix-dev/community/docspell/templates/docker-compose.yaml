{% set tpl = ix_lib.base.render.Render(values) %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.run_user, "gid": values.consts.run_group, "mode": "check"} %}

{% set pg_config = {"user": values.consts.db_user, "password": values.docspell.db_password, "database": values.consts.db_name, "volume": values.storage.postgres_data} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, "postgres_17_image", pg_config, perm_container) %}

{% set solr_config = {"core": values.consts.solr_core, "volume": values.storage.solr_data, "modules": values.consts.solr_modules} %}
{% set solr = tpl.deps.solr(values.consts.solr_container_name, "solr_image", solr_config, perm_container) %}

{% set srv = tpl.add_container(values.consts.docspell_container_name, "image") %}
{% set joex = tpl.add_container(values.consts.joex_container_name, "joex_image") %}

{% set srv_cmd = {
  "server.app-id": "truenas-docspell",
  "server.bind.address": "0.0.0.0",
  "server.bind.port": values.network.web_port.port_number,
  "server.internal-url": "http://%s:%d"|format(values.consts.docspell_container_name, values.network.web_port.port_number),
  "server.auth.server-secret": values.docspell.server_secret,
  "server.backend.jdbc.url": postgres.get_url("jdbc"),
  "server.backend.jdbc.user": values.consts.db_user,
  "server.backend.jdbc.password": values.docspell.db_password,
  "server.full-text-search.enabled": true,
  "server.full-text-search.backend": "solr",
  "server.full-text-search.solr.url": solr.get_url(),
} %}

{% set joex_cmd = namespace(x={
  "joex.app-id": "truenas-joex",
  "joex.scheduler.name": "truenas-joex",
  "joex.periodic-scheduler.name": "truenas-joex",
  "joex.bind.address": "0.0.0.0",
  "joex.bind.port": values.consts.joex_internal_port,
  "joex.base-url": "http://%s:%d"|format(values.consts.joex_container_name, values.consts.joex_internal_port),
  "joex.jdbc.url": postgres.get_url("jdbc"),
  "joex.jdbc.user": values.consts.db_user,
  "joex.jdbc.password": values.docspell.db_password,
  "joex.full-text-search.enabled": true,
  "joex.full-text-search.backend": "solr",
  "joex.full-text-search.solr.url": solr.get_url(),
  "joex.executor-config.runner": "docker,trivial" if values.docspell.joex_docker_runner else "trivial",
}) %}

{% if values.docspell.joex_docker_runner %}
  {% do joex.add_docker_socket(read_only=false) %}
{% endif %}

{% do srv.healthcheck.set_test("http", {"port": values.network.web_port.port_number, "path": "/api/info/version"}) %}
{% do joex.healthcheck.set_test("curl", {"port": values.consts.joex_internal_port, "path": "/api/info/version"}) %}

{% do srv.add_port(values.network.web_port) %}

{% for c in [srv, joex] %}
  {% set temp_cmd = namespace(x={}) %}
  {% if c.name() == values.consts.docspell_container_name %}
    {% set temp_cmd.x = srv_cmd %}
  {% elif c.name() == values.consts.joex_container_name %}
    {% set temp_cmd.x = joex_cmd.x %}
  {% else %}
    {% do tpl.funcs.fail("Invalid container name: " + c.name()) %}
  {% endif %}

  {% do c.set_user(values.run_as.user, values.run_as.group) %}
  {% do c.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
  {% do c.depends.add_dependency(values.consts.solr_container_name, "service_healthy") %}

  {% set cmd = namespace(x=[]) %}
  {% for key, value in temp_cmd.x.items() %}
    {# We use CLI flags because they take precedence over env vars AND config file(s). #}
    {# Set also the env var, so the user will get a friendly message that we already configure this setting #}
    {% do cmd.x.append("-Ddocspell.%s=%s"|format(key, value|string)) %}
    {% set var = "DOCSPELL_%s"|format(key.upper().replace("-", "__").replace(".", "_")) %}
    {% do c.environment.add_env(var, value) %}
  {% endfor %}

  {% do c.set_command(cmd.x) %}

  {% do c.environment.add_user_envs(values.docspell.additional_envs) %}

  {% for store in values.storage.additional_storage %}
    {% do c.add_storage(store.mount_path, store) %}
  {% endfor %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do srv.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do joex.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do solr.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
