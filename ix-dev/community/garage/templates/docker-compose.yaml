{% from "macros/setup.sh" import setup %}
{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.garage_container_name, "image") %}
{% set web = namespace(x=None) %}
{% set config = tpl.add_container(values.consts.config_container_name, "toml_image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{# Config #}
{% do config.set_user(values.run_as.user, values.run_as.group) %}
{% do config.add_storage(values.consts.config_path, values.storage.config) %}
{% do config.restart.set_policy("on-failure", 1) %}
{% do config.healthcheck.disable() %}
{% do config.deploy.resources.set_profile("low") %}
{% do config.remove_devices() %}
{% do config.configs.add("config", setup(values), "/config.sh", "0755") %}
{% do config.set_entrypoint(["/config.sh"]) %}

{# Web #}
{% if values.network.web_port.bind_mode %}
  {% set web.x = tpl.add_container(values.consts.web_container_name, "web_image") %}
  {% do web.x.set_user(values.run_as.user, values.run_as.group) %}
  {% do web.x.healthcheck.disable() %}

  {% do web.x.depends.add_dependency(values.consts.config_container_name, "service_completed_successfully") %}
  {% do web.x.depends.add_dependency(values.consts.garage_container_name, "service_healthy") %}
  {% do web.x.environment.add_env("PORT", values.network.web_port.port_number) %}
  {% do web.x.environment.add_env("CONFIG_PATH", "%s/garage.toml"|format(values.consts.config_path)) %}
  {% do web.x.environment.add_env("API_BASE_URL", "http://%s:%d"|format(values.consts.garage_container_name, values.network.admin_port.port_number)) %}
  {% do web.x.environment.add_env("API_ADMIN_KEY", values.garage.admin_token) %}
  {% do web.x.environment.add_env("S3_ENDPOINT_URL", "http://%s:%d"|format(values.consts.garage_container_name, values.network.s3_port.port_number)) %}

  {% do web.x.add_port(values.network.web_port) %}
  {% do web.x.add_storage(values.consts.config_path, dict(values.storage.config, **{"read_only": true})) %}
  {% do tpl.portals.add(values.network.web_port) %}
{% endif %}

{# Main #}
{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_custom_test(["CMD", "/garage", "status"]) %}

{% do c1.depends.add_dependency(values.consts.config_container_name, "service_completed_successfully") %}

{% do c1.environment.add_env("GARAGE_CONFIG_FILE", "%s/garage.toml"|format(values.consts.config_path)) %}
{% do c1.environment.add_env("GARAGE_ADMIN_TOKEN", values.garage.admin_token) %}
{% do c1.environment.add_env("GARAGE_RPC_SECRET", values.garage.rpc_secret) %}

{% do c1.environment.add_user_envs(values.garage.additional_envs) %}

{% do c1.add_port(values.network.rpc_port) %}
{% do c1.add_port(values.network.s3_port) %}
{% do c1.add_port(values.network.s3_web_port) %}
{% do c1.add_port(values.network.admin_port) %}

{% do c1.add_storage(values.consts.config_path, values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perms_config) %}

{% do c1.add_storage(values.consts.metadata_path, values.storage.metadata) %}
{% do perm_container.add_or_skip_action("metadata", values.storage.metadata, perms_config) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% do c1.add_storage(values.consts.metadata_snapshots_path, values.storage.metadata_snapshots) %}
{% do perm_container.add_or_skip_action("metadata_snapshots", values.storage.metadata_snapshots, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do config.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% if web.x %}
    {% do web.x.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% endif %}
{% endif %}

{{ tpl.render() | tojson }}
