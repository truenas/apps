{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.archisteamfarm_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.healthcheck.set_test("http", {"port": values.network.web_port.port_number, "path": "/healthcheck"}) %}
{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.environment.add_user_envs(values.archisteamfarm.additional_envs) %}

{% set config = tpl.funcs.copy_dict(values.consts.config) %}
{% do config.Kestrel.Endpoints.HTTP.update({"Url": "http://*:%d" | format(values.network.web_port.port_number)}) %}

{% do c1.configs.add("ipc-config", config | tojson, "/config/IPC.config") %}
{% do c1.configs.add("entrypoint.sh", values.consts.entrypoint, "/ix-entrypoint.sh", "0775") %}
{% do c1.set_entrypoint(["/ix-entrypoint.sh"]) %}

{% if not values.network.host_network %}
  {% do c1.add_port(values.network.web_port) %}
{% endif %}

{% do c1.add_storage("/app/config", values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perms_config) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port.port_number}) %}

{{ tpl.render() | tojson }}
