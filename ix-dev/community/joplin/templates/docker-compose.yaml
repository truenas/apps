{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.joplin_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.run_user, "gid": values.consts.run_group, "mode": "check"} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.joplin.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, "postgres_image", pg_config, perm_container) %}

{% do c1.set_user(values.consts.run_user, values.consts.run_group) %}
{% do c1.healthcheck.set_test("tcp", {"port": values.network.web_port}) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.environment.add_env("APP_PORT", values.network.web_port) %}
{% do c1.environment.add_env("APP_BASE_URL", values.joplin.base_url) %}
{% do c1.environment.add_env("DB_CLIENT", "pg") %}
{% do c1.environment.add_env("POSTGRES_HOST", values.consts.postgres_container_name) %}
{% do c1.environment.add_env("POSTGRES_DATABASE", values.consts.db_name) %}
{% do c1.environment.add_env("POSTGRES_USER", values.consts.db_user) %}
{% do c1.environment.add_env("POSTGRES_PASSWORD", values.joplin.db_password) %}
{% do c1.environment.add_env("POSTGRES_PORT", 5432) %}
{% do c1.environment.add_user_envs(values.joplin.additional_envs) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do postgres.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
