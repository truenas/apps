{% from "macros/global/perms/container.yaml.jinja" import perms_container %}

{% set perms_container_name = "permissions" %}
{% set sonarr_container_name = "sonarr" %}
{% set sonarr_image = "ghcr.io/onedr0p/sonarr:4.0.5.1710" %}

{% set volumes = namespace(items={}) %}
{% set volume_mounts = namespace(items=[]) %}
{% set perms_mounts = namespace(items=[]) %}
{% set perms_dirs = namespace(items=[]) %}

{% if ix_lib.base.storage.vol(data=storage.config) %}
  {% set _ = volumes.items.update(ix_lib.base.storage.vol(data=storage.config)) %}
  {% set _ = volume_mounts.items.append(ix_lib.base.storage.vol_mount(data=dict(storage.config, **{"mount_path": "/config"}), ix_volumes=ixVolumes)) %}
  {% if storage.config.auto_permissions %}
    {% set x = ix_lib.base.storage.vol_mount(data=dict(storage.config, **{"mount_path": "/mnt/sonarr/config"}), ix_volumes=ixVolumes) %}
    {% set _ = perms_mounts.items.append(x) %}
    {% set _ = perms_dirs.items.append({"dir": x.target, "mode": "check", "uid": run_as.user, "gid": run_as.group}) %}
  {% endif %}
{% endif %}

{% for store in storage.additional_storage %}
  {% if ix_lib.base.storage.vol(data=store) %}
    {% set _ = volumes.items.update(ix_lib.base.storage.vol(data=store)) %}
    {% set _ = volume_mounts.items.append(ix_lib.base.storage.vol_mount(data=store, ix_volumes=ixVolumes)) %}
  {% endif %}
{% endfor %}

{# Containers #}
services:
  {{ sonarr_container_name }}:
    user: {{ "%d:%d" | format(run_as.user, run_as.group) }}
    image: {{ sonarr_image }}
    restart: unless-stopped
    deploy:
      resources: {{ ix_lib.base.resources.resources(resources) | tojson }}
    {% if perms_dirs.items %}
    depends_on:
      {{ perms_container_name }}:
        condition: service_completed_successfully
    {% endif %}
    {% if network.host_network %}
    network_mode: host
    {% endif %}
    cap_drop: {{ ix_lib.base.security.get_caps().drop | tojson }}
    security_opt: {{ ix_lib.base.security.get_sec_opts() | tojson }}
    {% if network.dns_opts %}
    dns_opt: {{ ix_lib.base.network.dns_opts(network.dns_opts) | tojson }}
    {% endif %}
    {% set test = ix_lib.base.healthchecks.curl_test("/ping") %}
    healthcheck: {{ ix_lib.base.healthchecks.check_health(test) | tojson }}
    environment: {{ ix_lib.base.environment.envs(app={
      "SONARR__PORT": network.web_port,
      "SONARR__INSTANCE_NAME": sonarr.instance_name,
    }, user=sonarr.additional_envs) | tojson }}
    {% if not network.host_network %}
    ports:
      - {{ ix_lib.base.ports.get_port(port={"target": network.web_port, "published": network.web_port}) | tojson }}
    {% endif %}
    volumes: {{ volume_mounts.items | tojson }}
  {% if perms_dirs.items %}
  {{ perms_container_name }}:
    {{ perms_container(items=perms_dirs.items) | indent(4) }}
    volumes:
      {% for item in perms_mounts.items %}
      - {{ item | tojson }}
      {% endfor %}
  {% endif %}

{% if volumes.items %}
volumes: {{ volumes.items | tojson }}
{% endif %}
