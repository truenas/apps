{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.netboot_container_name, "image") %}
{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETUID", "SETGID", "SYS_CHROOT", "NET_BIND_SERVICE", "KILL"]) %}
{% do c1.healthcheck.set_custom_test("pgrep dnsmasq") %}

{% do c1.environment.add_env("NGINX_PORT", values.network.web_assets_port) %}
{% do c1.environment.add_env("WEB_APP_PORT", values.network.web_http_port) %}
{% do c1.environment.add_env("TFTPD_OPTS", values.netbootxyz.tftpd_opts | join(" ")) %}
{% do c1.environment.add_user_envs(values.netbootxyz.additional_envs) %}

{% do c1.ports.add_port(values.network.web_http_port, values.network.web_http_port) %}
{% do c1.ports.add_port(values.network.web_assets_port, values.network.web_assets_port) %}
{% if not values.network.host_network %}
  {% do c1.ports.add_port(69, values.network.tftp_port) %}
{% endif %}

{% do c1.add_storage("/var/log/nginx", {"type": "anonymous"}) %}
{% do c1.add_storage("/var/tmp/nginx", {"type": "anonymous"}) %}
{% do c1.add_storage("/config", values.storage.config) %}
{% do c1.add_storage("/assets", values.storage.assets) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_http_port}) %}

{{ tpl.render() | tojson }}
