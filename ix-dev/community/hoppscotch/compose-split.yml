name: hoppscotch-split

services:
  # This service runs the backend app in the port 3170
  hoppscotch-backend:
    profiles: ["default"]
    container_name: hoppscotch-backend
    image: hoppscotch/hoppscotch-backend
    env_file:
      - ./my.env
    restart: always
    volumes:
      - /usr/src/app/node_modules/
    depends_on:
      # hoppscotch-migrate:
      #   condition: service_completed_successfully
      hoppscotch-db:
        condition: service_healthy
    ports:
      - "3180:80"
      - "3170:3170"

  # The main hoppscotch app with integrated webapp server. This will be hosted at port 3000
  # The webapp server will be accessible at port 3200
  # NOTE: To do TLS or play around with how the app is hosted, you can look into the Caddyfile for
  #       the SH admin dashboard server at packages/hoppscotch-selfhost-web/Caddyfile
  hoppscotch-app:
    profiles: ["default"]
    container_name: hoppscotch-app
    image: hoppscotch/hoppscotch-frontend
    env_file:
      - ./my.env
    depends_on:
      - hoppscotch-backend
    ports:
      - "3080:80"
      - "3000:3000"
      - "3200:3200"

  # The Self Host dashboard for managing the app. This will be hosted at port 3100
  # NOTE: To do TLS or play around with how the app is hosted, you can look into the Caddyfile for
  #       the SH admin dashboard server at packages/hoppscotch-sh-admin/Caddyfile
  hoppscotch-sh-admin:
    profiles: ["default"]
    container_name: hoppscotch-sh-admin
    image: hoppscotch/hoppscotch-admin
    env_file:
      - ./my.env
    depends_on:
      - hoppscotch-backend
    ports:
      - "3280:80"
      - "3100:3100"

  # The preset DB service, you can delete/comment the below lines if
  # you are using an external postgres instance
  # This will be exposed at port 5432
  hoppscotch-db:
    profiles: ["default"]
    image: postgres:17
    ports:
      - "5432:5432"
    user: postgres
    environment:
      # The default user defined by the docker image
      POSTGRES_USER: postgres
      # NOTE: Please UPDATE THIS PASSWORD!
      POSTGRES_PASSWORD: hoppscotch
      POSTGRES_DB: hoppscotch
    # volumes:
    #   - ./postgresql.conf:/etc/postgresql/postgresql.conf
    # options:
    #   - "-c config_file=/etc/postgresql/postgresql.conf"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Auto-migration service - handles database migrations automatically
  hoppscotch-migrate:
    profiles: ["default"]
    image: hoppscotch/hoppscotch-backend
    env_file:
      - ./my.env
    depends_on:
      hoppscotch-db:
        condition: service_healthy
    command: sh -c "pnpx prisma migrate deploy"
