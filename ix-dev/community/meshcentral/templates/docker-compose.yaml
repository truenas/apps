{% from "macros/setup.jinja2" import setup_js, setup_sh %}
{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.meshcentral_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {"user": values.consts.db_user, "password": values.meshcentral.db_password, "database": values.consts.db_name, "volume": values.storage.postgres_data} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, values.meshcentral.postgres_image_selector, pg_config, perm_container) %}

{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/health.ashx", "scheme": "https"}) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}

{% do c1.configs.add("setup.sh", setup_sh(values), "/ix-setup.sh", "0755") %}
{% do c1.configs.add("setup.js", setup_js(values), "/ix-setup.js", "0755") %}
{% do c1.set_entrypoint(["/bin/bash", "/ix-setup.sh"]) %}

{% do c1.environment.add_env("NODE_ENV", "production") %}
{% do c1.environment.add_env("CONFIG_FILE", values.consts.config_path) %}
{% do c1.environment.add_env("DYNAMIC_CONFIG", false) %}

{% do c1.environment.add_user_envs(values.meshcentral.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage("/opt/meshcentral/meshcentral-data", values.storage.data) %}
{% do c1.add_storage("/opt/meshcentral/meshcentral-files", values.storage.files) %}
{% do c1.add_storage("/opt/meshcentral/meshcentral-web", values.storage.web) %}
{% do c1.add_storage("/opt/meshcentral/meshcentral-backups", values.storage.backups) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}
