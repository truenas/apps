{% set tpl = ix_lib.base.render.Render(values) %}

{% if not values.ci %}
  {% set auth_enabled = namespace(x=false) %}
  {% for auth in ["oidc_auth", "slack_auth", "google_auth", "github_auth", "azure_auth", "discord_auth"] %}
    {% if values.outline[auth].enabled %}
      {% set auth_enabled.x = true %}
    {% endif %}
  {% endfor %}

  {% if not auth_enabled.x %}
    {% do tpl.funcs.fail("No auth methods enabled. Please enable and configure at least one auth method.") %}
  {% endif %}
{% endif %}

{% set c1 = tpl.add_container(values.consts.outline_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.outline.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.outline.postgres_image_selector,
  pg_config, perm_container
) %}

{% set redis_config = {
  "password": values.outline.redis_password,
  "volume": {"type": "temporary", "volume_config": {"volume_name": "redis-data"}},
} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/_health"}) %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}

  {% do c1.environment.add_env("SSL_KEY", values.outline.ssl_key_path) %}
  {% do c1.environment.add_env("SSL_CERT", values.outline.ssl_cert_path) %}
{% endif %}

{% do c1.environment.add_env("NODE_ENV", "production") %}
{% do c1.environment.add_env("FILE_STORAGE", "local") %}
{% do c1.environment.add_env("URL", values.outline.app_url) %}
{% do c1.environment.add_env("FILE_STORAGE_LOCAL_ROOT_DIR", values.consts.data_path) %}
{% do c1.environment.add_env("SECRET_KEY", values.outline.secret_key) %}
{% do c1.environment.add_env("UTILS_SECRET", values.outline.utils_secret) %}
{% do c1.environment.add_env("DATABASE_URL", postgres.get_url("postgres")) %}
{% do c1.environment.add_env("REDIS_URL", redis.get_url("redis")) %}
{% do c1.environment.add_env("PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("FORCE_HTTPS", values.outline.force_https) %}

{% if values.outline.oidc_auth.enabled %}
  {% do c1.environment.add_env("OIDC_CLIENT_ID", values.outline.oidc_auth.client_id) %}
  {% do c1.environment.add_env("OIDC_CLIENT_SECRET", values.outline.oidc_auth.client_secret) %}
  {% do c1.environment.add_env("OIDC_AUTH_URI", values.outline.oidc_auth.auth_uri) %}
  {% do c1.environment.add_env("OIDC_TOKEN_URI", values.outline.oidc_auth.token_uri) %}
  {% do c1.environment.add_env("OIDC_USERINFO_URI", values.outline.oidc_auth.userinfo_uri) %}
  {% do c1.environment.add_env("OIDC_LOGOUT_URI", values.outline.oidc_auth.logout_uri) %}
  {% do c1.environment.add_env("OIDC_USERNAME_CLAIM", values.outline.oidc_auth.username_claim) %}
  {% do c1.environment.add_env("OIDC_DISPLAY_NAME", values.outline.oidc_auth.display_name) %}
  {% do c1.environment.add_env("OIDC_SCOPES", values.outline.oidc_auth.scopes | join(" ")) %}
{% endif %}

{% if values.outline.slack_auth.enabled %}
  {% do c1.environment.add_env("SLACK_CLIENT_ID", values.outline.slack_auth.client_id) %}
  {% do c1.environment.add_env("SLACK_CLIENT_SECRET", values.outline.slack_auth.client_secret) %}
{% endif %}

{% if values.outline.google_auth.enabled %}
  {% do c1.environment.add_env("GOOGLE_CLIENT_ID", values.outline.google_auth.client_id) %}
  {% do c1.environment.add_env("GOOGLE_CLIENT_SECRET", values.outline.google_auth.client_secret) %}
{% endif %}

{% if values.outline.github_auth.enabled %}
  {% do c1.environment.add_env("GITHUB_CLIENT_ID", values.outline.github_auth.client_id) %}
  {% do c1.environment.add_env("GITHUB_CLIENT_SECRET", values.outline.github_auth.client_secret) %}
  {% do c1.environment.add_env("GITHUB_APP_NAME", values.outline.github_auth.app_name) %}
  {% do c1.environment.add_env("GITHUB_APP_ID", values.outline.github_auth.app_id) %}
  {% do c1.environment.add_env("GITHUB_APP_PRIVATE_KEY", values.outline.github_auth.app_private_key) %}
{% endif %}

{% if values.outline.azure_auth.enabled %}
  {% do c1.environment.add_env("AZURE_CLIENT_ID", values.outline.azure_auth.client_id) %}
  {% do c1.environment.add_env("AZURE_CLIENT_SECRET", values.outline.azure_auth.client_secret) %}
  {% do c1.environment.add_env("AZURE_RESOURCE_APP_ID", values.outline.azure_auth.resource_app_id) %}
{% endif %}

{% if values.outline.discord_auth.enabled %}
  {% do c1.environment.add_env("DISCORD_CLIENT_ID", values.outline.discord_auth.client_id) %}
  {% do c1.environment.add_env("DISCORD_CLIENT_SECRET", values.outline.discord_auth.client_secret) %}
  {% do c1.environment.add_env("DISCORD_SERVER_ID", values.outline.discord_auth.server_id) %}
  {% do c1.environment.add_env("DISCORD_SERVER_ROLES", values.outline.discord_auth.server_roles | join(",")) %}
{% endif %}

{% do c1.environment.add_user_envs(values.outline.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do redis.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port.port_number}) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}
