{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.calibre_container_name, "image") %}

{% do c1.set_user(0, 0) %}
{% do c1.add_caps(["CHOWN", "SETGID", "SETUID", "DAC_OVERRIDE", "FOWNER"]) %}

{# TODO: figure this #}
{% do c1.remove_security_opt("no-new-privileges") %}
{% do c1.add_security_opt("seccomp=unconfined") %}

{% do c1.healthcheck.set_test("tcp", {"port": values.network.http_port}) %}

{% do c1.environment.add_env("CUSTOM_PORT", values.network.http_port) %}
{% do c1.environment.add_env("CUSTOM_HTTPS_PORT", values.network.https_port) %}

{% do c1.environment.add_user_envs(values.calibre.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.consts.internal_web_port) %}
{% do c1.ports.add_port(values.network.http_port, values.network.http_port) %}
{% do c1.ports.add_port(values.network.https_port, values.network.https_port) %}

{% do c1.add_storage(values.consts.config_path, values.storage.config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
