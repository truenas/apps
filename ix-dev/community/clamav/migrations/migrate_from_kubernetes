#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "clamav": {
            "disable_clamd": config["clamavConfig"]["disableClamd"],
            "disable_freshclamd": config["clamavConfig"]["disableFreshClamd"],
            "disable_milterd": config["clamavConfig"]["disableMilterd"],
            "clamd_startup_timeout": config["clamavConfig"]["clamdStartupTimeout"],
            "freshclamd_checks": config["clamavConfig"]["freshclamChecks"],
            "additional_envs": config["clamavConfig"].get("additionalEnvs", []),
        },
        "network": {
            "clamd_port": config["clamavNetwork"].get("clamdPort", 33100),
            "milterd_port": config["clamavNetwork"].get("milterdPort", 33200),
            "host_network": config["clamavNetwork"].get("hostNetwork", False),
        },
        "storage": {
            "sigdb": migrate_storage_item(config["clamavStorage"]["sigdb"]),
            "scandir": migrate_storage_item(config["clamavStorage"]["scandir"]),
        },
        "resources": migrate_resources(config["resources"]),
    }

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
