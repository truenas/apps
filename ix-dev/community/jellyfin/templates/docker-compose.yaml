{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.jellyfin_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("curl", {"port": 8096, "path": "/health"}) %}

{% if values.jellyfin.publish_server_url %}
  {% do c1.environment.add_env("JELLYFIN_PublishedServerUrl", values.jellyfin.publish_server_url) %}
{% endif %}
{% do c1.environment.add_user_envs(values.jellyfin.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.ports.add_port(values.network.web_port, 8096) %}
  {% if values.network.enable_https %}
    {% do c1.ports.add_port(values.network.https_port, 8920) %}
  {% endif %}
{% endif %}

{% do c1.add_storage("/config", values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perm_config) %}

{% do c1.add_storage("/cache", values.storage.cache) %}
{% do perm_container.add_or_skip_action("cache", values.storage.cache, perm_config) %}

{% set static_transcodes_options = {
  "tmpfs_config": {"mode": "0777"},
  "volume_config": {"volume_name": "jellyfin-transcodes"},
} %}
{% set transcodes_storage = dict(values.storage.transcodes, **static_transcodes_options) %}
{% do c1.add_storage("/config/transcodes", transcodes_storage) %}
{% do perm_container.add_or_skip_action("transcodes", transcodes_storage, perm_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": 8096 if values.network.host_network else values.network.web_port}) %}

{{ tpl.render() | tojson }}
