{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.tvheadend_container_name, "image") %}

{% if values.ci %}
  {% do c1.healthcheck.set_test("curl", {"port": values.consts.web_internal_port, "scheme": "http"}) %}
{% else %}
  {% do c1.healthcheck.disable() %}
{% endif %}

{% do c1.clear_caps() %}

{% if values.tvheadend.dvb_support %}
  {% do c1.add_storage("/dev/dvb", {"type": "host_path", "read_only": true, "host_path_config": {"path": "/dev/dvb"}}) %}
{% endif %}

{% do c1.environment.add_env("PUID", values.network.run_as.user) %}
{% do c1.environment.add_env("PGID", values.network.run_as.group) %}
{% do c1.environment.add_user_envs(values.tvheadend.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.add_port(values.network.htsp_port) %}
  {% do c1.add_port(values.network.web_port, {"container_port": values.consts.web_internal_port}) %}
{%endif %}

{% do c1.add_storage("/config", values.storage.config) %}
{% do c1.add_storage("/recordings", values.storage.recordings) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_port.port_number, "scheme": "http"}) %}

{{ tpl.render() | tojson }}
