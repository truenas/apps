{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.tubearchivist_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set es_config = {"password": values.tube.elastic_password, "node_name": "tubearchivist", "volume": values.storage.es_data} %}
{% set es = tpl.deps.elasticsearch(values.consts.elastic_search_container_name, "elastic_search_image", es_config, perm_container) %}

{% set redis_config = {"password": values.tube.redis_password, "volume": tpl.funcs.temp_config("redis_data")} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER"]) %}
{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port.port_number, "host": "localhost", "path": "/api/health"}) %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.elastic_search_container_name, "service_healthy") %}
{% do c1.environment.add_env("ES_URL", es.get_url()) %}
{% do c1.environment.add_env("ES_SNAPSHOT_DIR", es.get_snapshots_dir()) %}
{% do c1.environment.add_env("ELASTIC_PASSWORD", values.tube.elastic_password) %}
{% do c1.environment.add_env("TA_PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("TA_BACKEND_PORT", values.network.web_port.port_number+1) %}
{% do c1.environment.add_env("TA_HOST", values.tube.app_url) %}
{% do c1.environment.add_env("TA_USERNAME", values.tube.username) %}
{% do c1.environment.add_env("TA_PASSWORD", values.tube.password) %}
{% do c1.environment.add_env("REDIS_CON", redis.get_url("redis")) %}
{% do c1.environment.add_env("HOST_UID", values.run_as.user) %}
{% do c1.environment.add_env("HOST_GID", values.run_as.group) %}
{% do c1.environment.add_user_envs(values.tube.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage("/youtube", values.storage.youtube) %}
{% do c1.add_storage("/cache", values.storage.cache) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do es.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
