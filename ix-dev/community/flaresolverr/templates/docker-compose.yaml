{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.flaresolverr_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}

{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check", "chmod": "0777"} %}

{% do c1.add_storage("/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.environment.add_user_envs(values.flaresolverr.additional_envs) %}
{% do c1.environment.add_env("HOST", "0.0.0.0") %}
{% do c1.environment.add_env("PORT", values.network.web_port) %}
{% do c1.environment.add_env("CAPTCHA_SOLVER", values.flaresolverr.captcha_solver) %}
{% do c1.environment.add_env("LOG_HTML", values.flaresolverr.log_html) %}
{% do c1.environment.add_env("LOG_LEVEL", values.flaresolverr.log_level) %}

{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port, "path": "/health"}) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
