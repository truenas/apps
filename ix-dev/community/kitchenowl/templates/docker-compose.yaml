{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.backend_container_name, "image") %}
{% set web = tpl.add_container(values.consts.web_container_name, "front_image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.kitchenowl.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.kitchenowl.postgres_image_selector,
  pg_config, perm_container
) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}

{# https://github.com/TomBursch/kitchenowl/blob/814fe85081bab19b3f7de557c8bad86d4e52d7c7/backend/Dockerfile#L44C71-L44C115 #}
{% do c1.healthcheck.set_custom_test(["CMD", "uwsgi_curl", "127.0.0.1:%d"|format(values.consts.internal_backend_port), "/api/health/8M4F88S8ooi4sMbLBfkkV7ctWwgibW6V"]) %}
{% do web.healthcheck.set_test("curl", {"port": values.consts.internal_web_port}) %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do web.depends.add_dependency(values.consts.backend_container_name, "service_healthy") %}

{% do c1.environment.add_env("BASE_HREF", "") %}
{% do c1.environment.add_env("DB_DRIVER", "postgresql") %}
{% do c1.environment.add_env("DB_HOST", values.consts.postgres_container_name) %}
{% do c1.environment.add_env("DB_PORT", 5432) %}
{% do c1.environment.add_env("DB_NAME", values.consts.db_name) %}
{% do c1.environment.add_env("DB_USER", values.consts.db_user) %}
{% do c1.environment.add_env("DB_PASSWORD", values.kitchenowl.db_password) %}
{% do c1.environment.add_env("STORAGE_PATH", values.consts.data_path) %}
{% do c1.environment.add_env("JWT_SECRET_KEY", values.kitchenowl.jwt_secret_key) %}

{% do web.environment.add_env("BASE_HREF", "") %}
{% do web.environment.add_env("BACK_URL", "%s:%d"|format(values.consts.backend_container_name, values.consts.internal_backend_port)) %}

{% do c1.environment.add_user_envs(values.kitchenowl.additional_envs) %}

{% do web.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do web.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
