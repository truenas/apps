{% set tpl = ix_lib.base.render.Render(values) %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.nocodb.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.nocodb.postgres_image_selector,
  pg_config, perm_container
) %}

{% set redis_config = {
  "password": values.nocodb.redis_password,
  "volume": {"type": "temporary", "volume_config": {"volume_name": "redis-data"}},
} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% set c1 = tpl.add_container(values.consts.nocodb_container_name, "image") %}
{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("curl", {"port": 8080, "path": "/", "scheme": "http"}) %}

{% do c1.environment.add_env("NC_DB", "pg://" + values.consts.postgres_container_name + ":5432?u=" + values.consts.db_user + "&p=" + values.nocodb.db_password + "&d=" + values.consts.db_name) %}

{# JWT Secret - auto-generated if not provided #}
{% if values.nocodb.jwt_secret %}
  {% do c1.environment.add_env("NC_AUTH_JWT_SECRET", values.nocodb.jwt_secret) %}
{% endif %}

{# Admin credentials for initial setup #}
{% if values.nocodb.admin_email %}
  {% do c1.environment.add_env("NC_ADMIN_EMAIL", values.nocodb.admin_email) %}
{% endif %}
{% if values.nocodb.admin_password %}
  {% do c1.environment.add_env("NC_ADMIN_PASSWORD", values.nocodb.admin_password) %}
{% endif %}

{# Public URL configuration #}
{% if values.nocodb.public_url %}
  {% do c1.environment.add_env("NC_PUBLIC_URL", values.nocodb.public_url) %}
{% endif %}

{# Security and signup settings #}
{% if values.nocodb.invite_only_signup %}
  {% do c1.environment.add_env("NC_INVITE_ONLY_SIGNUP", "true") %}
{% endif %}

{# Telemetry setting #}
{% if values.nocodb.disable_tele %}
  {% do c1.environment.add_env("NC_DISABLE_TELE", "true") %}
{% endif %}

{# Redis configuration #}
{% do c1.environment.add_env("NC_REDIS_URL", "redis://:" + values.nocodb.redis_password + "@" + values.consts.redis_container_name + ":6379") %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% do c1.add_storage("/tmp", {"type": "anonymous"}) %}

{% do c1.ports.add_port(values.network.web_port, 8080) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do redis.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "scheme": "http"}) %}

{{ tpl.render() | tojson }}
