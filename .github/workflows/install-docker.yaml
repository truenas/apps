name: Test App Install

on:
  pull_request: {}

jobs:
  changed-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
      - name: Echo changed files
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          apps=()

          for file in $CHANGED_FILES
          do
            # ix-dev/TRAIN/APP/
            if [[ $file == ix-dev/*/* ]]; then
              app=$(echo $file | cut -d '/' -f 3)
              train=$(echo $file | cut -d '/' -f 2)

              if [[ ! " ${apps[@]} " =~ " ${train}/${app} " ]]; then
                apps+=($train/$app)
              fi

              if [[ ! -d ix-dev/$train/$app/ci ]]; then
                echo "No values file found for $train/$app in ci directory."
                exit 1
              fi
            fi
          done

          echo "Apps: ${apps[@]}"

      - name: Environment Information
        run: |
          echo "====== Docker Info ======"
          docker info
          echo "========================="
          echo "== Docker Compose Info =="
          docker compose version
          echo "========================="
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.2"
      - name: Install Dependencies
        shell: bash
        run: |
          pip install -r requirements.txt
      - name: Install Go Dependencies
        run: |
          cd tools/docker-health-check
          go mod download
          go build -o ../../check_health cmd/main.go
          chmod +x ../../check_health
      # TODO: Find changed files
      # TODO: for each app, loop over the ci/ directory and do the below process
      - name: Render template
        shell: bash
        run: |
          ./main.py ix-dev/enterprise/minio/ci/basic-values.yaml > docker-compose.yaml
      - name: Preview template
        shell: bash
        run: |
          # Print the parsed, by compose, template
          # (as it will also remove empty lines)
          docker compose -f docker-compose.yaml config
      - name: Generate random project name
        shell: bash
        run: |
          echo "PROJECT_NAME=$(openssl rand -hex 12)" >> $GITHUB_ENV
      - name: Up containers
        shell: bash
        run: |
          docker compose -p $PROJECT_NAME -f docker-compose.yaml up -d
      - name: Wait containers
        shell: bash
        run: |
          ./check_health --project $PROJECT_NAME --files docker-compose.yaml
