{% set tpl = ix_lib.base.render.Render(values) %}

{% set proto = "https" if values.network.certificate_id else "http" %}

{% set c1 = tpl.add_container(values.consts.pgadmin_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do c1.add_caps(["NET_BIND_SERVICE"]) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port, "scheme": proto, "path": "/misc/ping"}) %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, "%s/server.key" | format(values.consts.certs_path)) %}
  {% do c1.configs.add("public", cert.certificate, "%s/server.cert" | format(values.consts.certs_path)) %}
  {% do c1.environment.add_env("PGADMIN_ENABLE_TLS", true) %}
{% endif %}

{% do c1.environment.add_env("PGADMIN_LISTEN_PORT", values.network.web_port) %}
{% do c1.environment.add_env("PGADMIN_DEFAULT_EMAIL", values.pgadmin.admin_email) %}
{% do c1.environment.add_env("PGADMIN_DEFAULT_PASSWORD", values.pgadmin.admin_password) %}
{% do c1.environment.add_env("PGADMIN_SERVER_JSON_FILE", "%s/servers/servers.json"|format(values.consts.config_path)) %}
{% do c1.environment.add_user_envs(values.pgadmin.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.add_storage(values.consts.config_path, values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perm_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
