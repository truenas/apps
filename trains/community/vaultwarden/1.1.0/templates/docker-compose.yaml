{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.vaultwarden_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.vaultwarden.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, "postgres_image", pg_config, perm_container) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.healthcheck.set_custom_test("/healthcheck.sh") %}

{% do c1.environment.add_env("ROCKET_PORT", values.network.web_port) %}
{% do c1.environment.add_env("WEBSOCKET_PORT", values.network.ws_port) %}
{% do c1.environment.add_env("WEBSOCKET_ENABLED", values.network.ws_enabled) %}
{% do c1.environment.add_env("ADMIN_TOKEN", values.vaultwarden.admin_token) %}
{% do c1.environment.add_env("DATABASE_URL", postgres.get_url("postgres")) %}
{% if values.network.domain %}
  {% do c1.environment.add_env("DOMAIN", values.network.domain) %}
{% endif %}
{% if values.network.certificate_id %}
  {% do c1.environment.add_env("ROCKET_TLS", '{certs="%s",key="%s"}'|format(values.consts.ssl_cert_path, values.consts.ssl_key_path)) %}
  {% do c1.configs.add("private", values.ix_certificates[values.network.certificate_id].privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", values.ix_certificates[values.network.certificate_id].certificate, values.consts.ssl_cert_path) %}
{% endif %}

{% do c1.environment.add_user_envs(values.vaultwarden.additional_envs) %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% do c1.add_storage("/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
{% if values.network.ws_enabled %}
  {% do c1.ports.add_port(values.network.ws_port, values.network.ws_port) %}
{% endif %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% set portal_scheme = "https" if values.network.certificate_id else "http" %}
{% do tpl.portals.add_portal({"port": values.network.web_port, "scheme": portal_scheme}) %}
{% if values.vaultwarden.admin_token %}
  {% do tpl.portals.add_portal({"name": "Admin Portal", "path": "/admin", "port": values.network.web_port, "scheme": portal_scheme}) %}
{% endif %}

{{ tpl.render() | tojson }}
