{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.open_webui_container_name, values.open_webui.image_selector) %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% set redis_config = {"password": values.open_webui.redis_password, "volume": tpl.funcs.temp_config("redis_data")} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.add_group(0) %}
{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port.port_number, "path": "/health"}) %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}
{% do c1.add_extra_host("host.docker.internal", "host-gateway") %}
{% do c1.environment.add_env("HOST", "0.0.0.0") %}
{% do c1.environment.add_env("PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("REDIS_URL", redis.get_url("redis")) %}
{% do c1.environment.add_env("WEBUI_SECRET_KEY", values.open_webui.webui_secret_key) %}
{% if values.open_webui.openai_api_key %}{% do c1.environment.add_env("OPENAI_API_KEY", values.open_webui.openai_api_key) %}{% endif %}
{% if values.open_webui.ollama_base_url %}{% do c1.environment.add_env("OLLAMA_BASE_URL", values.open_webui.ollama_base_url) %}{% endif %}

{% do c1.environment.add_user_envs(values.open_webui.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage("/app/backend/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}
{% do c1.add_storage("/root/.ollama", values.storage.ollama) %}
{% do perm_container.add_or_skip_action("ollama", values.storage.ollama, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
