{% set tpl = ix_lib.base.render.Render(values) %}

{% do ix_lib.base.validations.valid_redis_password_or_raise(values.redis.password) %}

{% set c1 = tpl.add_container(values.consts.redis_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do c1.healthcheck.set_custom_test(
  "redis-cli -p %s %s ping | grep -q PONG" | format(values.network.tcp_port, "" if values.redis.allow_empty_password else '-a "$REDIS_PASSWORD"')
) %}

{% do c1.environment.add_env("REDIS_PORT_NUMBER", values.network.tcp_port) %}
{% do c1.environment.add_env("ALLOW_EMPTY_PASSWORD", "yes" if values.redis.allow_empty_password else "no") %}
{% do c1.environment.add_env("REDIS_PASSWORD", "" if values.redis.allow_empty_password else values.redis.password) %}
{% do c1.environment.add_user_envs(values.redis.additional_envs) %}

{% do c1.ports.add_port(values.network.tcp_port, values.network.tcp_port) %}

{% set tmp_config = {"type":"temporary", "volume_config": {"volume_name": "redis-temp"}} %}
{% do c1.add_storage("/tmp", tmp_config) %}
{% do perm_container.add_or_skip_action("temp", tmp_config, perms_config) %}

{% do c1.add_storage("/bitnami/redis/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
