{% set tpl = ix_lib.base.render.Render(values) %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}
{% set state_perm_config = dict(perm_config, **{"chmod": "0750"}) %}

{% set arti = tpl.add_container(values.consts.arti_container_name, values.consts.arti_container_name) %}
{% do arti.set_user(values.consts.run_as_user, values.consts.run_as_group) %}

{% do arti.healthcheck.set_timeout(20) %}
{% do arti.healthcheck.set_custom_test(
  "curl -x socks5h://127.0.0.1:%d 'https://check.torproject.org/api/ip' | grep -qm1 -E '\"IsTor\"\s*:\s*true'" | format(
    values.network.socks_port.port_number
  )
) %}

{% do arti.set_command([
  "proxy",
  "-o address_filter.allow_onion_addrs=%s" | format(values.arti.allow_onion_addrs|lower),
  "-o proxy.socks_listen='0.0.0.0:%d'" | format(values.network.socks_port.port_number),
]) %}

{% do arti.add_storage("/home/arti/.config/arti", values.storage.arti_config) %}
{% do perm_container.add_or_skip_action("arti_config", values.storage.arti_config, perm_config) %}
{% do arti.add_storage("/home/arti/.local/share/arti", values.storage.arti_state) %}
{% do perm_container.add_or_skip_action("arti_state", values.storage.arti_state, state_perm_config) %}

{% if not values.network.host_network %}
  {% do arti.add_port(values.network.socks_port) %}
{% endif %}

{% for port in values.network.additional_ports %}
  {% do arti.add_port(port) %}
{% endfor %}

{% for store in values.storage.additional_storage %}
  {% do arti.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do arti.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
