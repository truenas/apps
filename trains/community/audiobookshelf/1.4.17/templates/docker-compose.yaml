{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.audiobookshelf_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/healthcheck"}) %}

{% if values.network.opds_port.bind_mode %}
  {% set c2 = tpl.add_container(values.consts.opds_container_name, "opds_image") %}

  {% do c2.set_user(values.run_as.user, values.run_as.group) %}
  {% do c2.healthcheck.set_test("netcat", {"port": values.network.opds_port.port_number}) %}

  {% do c2.environment.add_env("PORT", values.network.opds_port.port_number) %}
  {% do c2.environment.add_env("USE_PROXY", true) %}
  {% do c2.environment.add_env("ABS_URL", "http://" ~ values.consts.audiobookshelf_container_name ~ ":" ~ values.network.web_port.port_number) %}

  {% do c2.add_port(values.network.opds_port) %}
  {% do c2.depends.add_dependency(values.consts.audiobookshelf_container_name, "service_healthy") %}
{% endif %}

{% do c1.environment.add_env("PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("CONFIG_PATH", values.consts.config_path) %}
{% do c1.environment.add_env("METADATA_PATH", values.consts.metadata_path) %}

{% do c1.environment.add_user_envs(values.audiobookshelf.additional_envs) %}
{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.config_path, values.storage.config) %}
{% do perm_container.add_or_skip_action("config", values.storage.config, perms_config) %}

{% do c1.add_storage(values.consts.metadata_path, values.storage.metadata) %}
{% do perm_container.add_or_skip_action("metadata", values.storage.metadata, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
