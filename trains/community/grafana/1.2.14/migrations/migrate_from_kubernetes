#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    data = migrate_storage_item(config["grafanaStorage"]["data"])
    path = ""
    if data["type"] == "host_path":
        path = config["grafanaStorage"]["data"].get("hostPathConfig").get("hostPath")
    else:
        for v in config["ixVolumes"]:
            if v["hostPath"].endswith("/data"):
                path = v["hostPath"]
                break

    plugins = {
        "type": "host_path",
        "host_path_config": {"path": path + "/plugins"},
    }

    new_values = {
        "grafana": {
            "additional_envs": config["grafanaConfig"].get("additionalEnvs", []),
            "plugins": config["grafanaConfig"].get("plugins", []),
        },
        "network": {
            "root_url": config["grafanaNetwork"]["rootURL"],
            "web_port": config["grafanaNetwork"]["webPort"],
            "certificate_id": config["grafanaNetwork"]["certificateID"],
            "host_network": config["grafanaNetwork"].get("hostNetwork", False),
        },
        "run_as": {
            "user": config["grafanaRunAs"].get("user", 568),
            "group": config["grafanaRunAs"].get("group", 568),
        },
        "storage": {
            "plugins": plugins,
            "data": data,
            "additional_storage": [
                migrate_storage_item(item, include_read_only=True)
                for item in config["grafanaStorage"]["additionalStorages"]
            ],
        },
        "resources": migrate_resources(config["resources"]),
    }

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
