{% set tpl = ix_lib.base.render.Render(values) %}

{% do tpl.funcs.require_no_reserved(
  values.memcached.additional_args, "Additional Args",
  values.consts.reserved_flags, "=", true
) %}

{% set c1 = tpl.add_container(values.consts.memcached_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}

{% set cmd = namespace(x=["memcached", "--port", values.network.tcp_port.port_number]) %}
{% for arg in values.memcached.additional_args %}
  {% do cmd.x.append(arg) %}
{% endfor %}
{% do c1.set_command(cmd.x) %}

{% do c1.healthcheck.set_test("tcp", {"port": values.network.tcp_port.port_number}) %}
{% do c1.environment.add_user_envs(values.memcached.additional_envs) %}

{% do c1.add_port(values.network.tcp_port) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
