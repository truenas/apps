{% set tpl = ix_lib.base.render.Render(values) %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}
{% set mariadb_config = {
  "user": values.consts.db_user,
  "root_password": values.mempool.db_root_password,
  "password": values.mempool.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.mariadb_data,
} %}
{% set mariadb_container = tpl.deps.mariadb(values.consts.mariadb_container_name, "mariadb_image", mariadb_config, perm_container) %}

{% set mempool_backend = tpl.add_container(values.consts.mempool_backend_container_name, "image") %}
{% do mempool_backend.add_extra_host("host.docker.internal", "host-gateway") %}
{% do mempool_backend.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do mempool_backend.healthcheck.set_test("tcp", {"port": values.consts.mempool_backend_http_port}) %}

{% do mempool_backend.environment.add_env("CORE_RPC_HOST", values.mempool.external_bitcoind_ip or "host.docker.internal") %}
{% do mempool_backend.environment.add_env("CORE_RPC_PORT", values.mempool.bitcoind_rpc_port) %}
{% do mempool_backend.environment.add_env("CORE_RPC_USERNAME", values.mempool.bitcoind_rpc_user) %}
{% do mempool_backend.environment.add_env("CORE_RPC_PASSWORD", values.mempool.bitcoind_rpc_password) %}
{% do mempool_backend.environment.add_env("ELECTRUM_HOST", values.mempool.external_electrum_ip or "host.docker.internal") %}
{% do mempool_backend.environment.add_env("ELECTRUM_PORT", values.mempool.electrum_rpc_port) %}
{% do mempool_backend.environment.add_env("ELECTRUM_TLS", values.mempool.electrum_use_tls) %}
{% do mempool_backend.environment.add_env("DATABASE_HOST", values.consts.mariadb_container_name) %}
{% do mempool_backend.environment.add_env("DATABASE_PORT", 3306) %}
{% do mempool_backend.environment.add_env("DATABASE_DATABASE", values.consts.db_name) %}
{% do mempool_backend.environment.add_env("DATABASE_USERNAME", values.consts.db_user) %}
{% do mempool_backend.environment.add_env("DATABASE_PASSWORD", values.mempool.db_password) %}
{% do mempool_backend.environment.add_env("MEMPOOL_HTTP_PORT", values.consts.mempool_backend_http_port) %}
{% do mempool_backend.environment.add_env("MEMPOOL_CACHE_DIR", values.consts.mempool_backend_cache_dir) %}
{% do mempool_backend.environment.add_env("MEMPOOL_CLEAR_PROTECTION_MINUTES", 20) %}
{% do mempool_backend.environment.add_user_envs(values.mempool.additional_envs) %}

{% do mempool_backend.add_storage(values.consts.cache_dir_path, values.storage.cache) %}
{% do perm_container.add_or_skip_action("cache_data", values.storage.cache, perm_config) %}

{% set mempool_frontend = tpl.add_container(values.consts.mempool_frontend_container_name, "frontend_image") %}
{% do mempool_frontend.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do mempool_frontend.healthcheck.set_test("curl", {"port": values.network.web_ui_port.port_number}) %}
{% do mempool_frontend.environment.add_env("FRONTEND_HTTP_PORT", values.network.web_ui_port.port_number) %}
{% do mempool_frontend.environment.add_env("BACKEND_MAINNET_HTTP_HOST", values.consts.mempool_backend_container_name) %}
{% do mempool_frontend.environment.add_env("BACKEND_MAINNET_HTTP_PORT", values.consts.mempool_backend_http_port) %}
{% do mempool_frontend.environment.add_user_envs(values.mempool.additional_envs) %}

{% if not values.network.host_network %}
  {% do mempool_frontend.add_port(values.network.web_ui_port) %}
{% endif %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do mariadb_container.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do mempool_backend.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do mempool_backend.depends.add_dependency(values.consts.mariadb_container_name, "service_healthy") %}
  {% do mempool_frontend.depends.add_dependency(values.consts.mempool_backend_container_name, "service_healthy") %}
{% endif %}

{{ tpl.render() | tojson }}
