{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.listmonk_container_name, "image") %}
{% set init = tpl.add_container(values.consts.init_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.listmonk.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.listmonk.postgres_image_selector,
  pg_config, perm_container
) %}

{% set app_env = {
  "LISTMONK_app__address": "0.0.0.0:%d"|format(values.network.web_port),
  "LISTMONK_db__port": 5432,
  "LISTMONK_db__host": values.consts.postgres_container_name,
  "LISTMONK_db__user": values.consts.db_user,
  "LISTMONK_db__database": values.consts.db_name,
  "LISTMONK_db__sslmode": "disable",
  "LISTMONK_app__admin_username": values.listmonk.admin_username,
  "LISTMONK_app__admin_password": values.listmonk.admin_password,
  "LISTMONK_db__password": values.listmonk.db_password,
} %}
{% for key, value in app_env.items() %}
  {% do c1.environment.add_env(key, value) %}
  {% do init.environment.add_env(key, value) %}
{% endfor %}

{% do c1.set_user(0, 0) %}
{% do c1.add_caps(["CHOWN", "FOWNER", "DAC_OVERRIDE", "SETUID", "SETGID"]) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port, "path": "/health"}) %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.init_container_name, "service_completed_successfully") %}
{% do c1.environment.add_user_envs(values.listmonk.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do init.set_user(0, 0) %}
{% do init.restart.set_policy("on-failure", 1) %}
{% do init.deploy.resources.set_profile("low") %}
{% do init.healthcheck.disable() %}
{% do init.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do init.environment.add_user_envs(values.listmonk.additional_envs) %}

{% do init.set_entrypoint(["/bin/sh", "-c"]) %}
{% do init.set_command([
  "/listmonk/listmonk --install --idempotent --yes\n"
  "/listmonk/listmonk --upgrade --yes\n"
]) %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% do c1.add_storage("/listmonk/uploads", values.storage.uploads) %}
{% do init.add_storage("/listmonk/uploads", values.storage.uploads) %}
{% do perm_container.add_or_skip_action("uploads", values.storage.uploads, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do init.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do init.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
