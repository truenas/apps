{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.copyparty_container_name, values.copyparty.image_selector) %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_data = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% set scheme = "https" if values.network.certificate_id else "http" %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/?reset=/._", "scheme": scheme}) %}

{% set command = namespace(x=values.copyparty.additional_args + [
  "-p=%d" | format(values.network.web_port.port_number),
  "--%s-only" | format("https" if values.network.certificate_id else "http"),
]) %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("combined", cert.privatekey + "\n" + cert.certificate, values.consts.cert_path) %}
  {% do command.x.extend(["--cert", values.consts.cert_path]) %}
{% endif %}

{% do c1.set_command(command.x) %}

{% do c1.environment.add_user_envs(values.copyparty.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}
{% do c1.add_storage("/cfg", values.storage.config) %}
{% do perm_container.add_or_skip_action("cfg", values.storage.config, perms_data) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_data) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port, {"scheme": scheme}) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}
