{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.librechat_container_name, "image") %}
{% set rag = tpl.add_container(values.consts.rag_container_name, "rag_image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{# Meilisearch #}
{% set meili_config = {"master_key": values.librechat.meilisearch_master_key, "volume": values.storage.meili_data} %}
{% set meilisearch = tpl.deps.meilisearch(values.consts.meilisearch_container_name, "meilisearch_image", meili_config, perm_container) %}

{# Postgres #}
{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.librechat.pg_db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, values.librechat.postgres_image_selector, pg_config, perm_container) %}

{# MongoDB #}
{% set mongo_config = {
  "user": values.consts.db_user,
  "password": values.librechat.mongo_db_password,
  "database": values.consts.db_name,
  "volume": values.storage.mongodb_data,
} %}
{% set mongo = tpl.deps.mongodb(values.consts.mongo_container_name, "mongo_image", mongo_config, perm_container) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/health"}) %}
{% do c1.add_extra_host("host.docker.internal", "host-gateway") %}
{% do c1.depends.add_dependency(values.consts.mongo_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.rag_container_name, "service_healthy") %}

{% do c1.environment.add_env("HOST", "0.0.0.0") %}
{% do c1.environment.add_env("PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_env("SEARCH", true) %}
{% do c1.environment.add_env("MEILI_HOST", meilisearch.get_url()) %}
{% do c1.environment.add_env("MEILI_MASTER_KEY", values.librechat.meilisearch_master_key) %}
{% do c1.environment.add_env("JWT_SECRET", values.librechat.jwt_secret) %}
{% do c1.environment.add_env("JWT_REFRESH_SECRET", values.librechat.jwt_refresh_secret) %}
{% do c1.environment.add_env("MONGO_URI", mongo.get_url("mongodb")+"?authSource=admin") %}
{% do c1.environment.add_env("RAG_PORT", values.consts.rag_port_number) %}
{% do c1.environment.add_env("RAG_API_URL", "http://%s:%d"|format(values.consts.rag_container_name, values.consts.rag_port_number)) %}
{% do c1.environment.add_env("ALLOW_REGISTRATION", values.librechat.allow_registration) %}
{% do c1.environment.add_user_envs(values.librechat.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage("/app/client/public/images", values.storage.images) %}
{% do perm_container.add_or_skip_action("images", values.storage.images, perms_config) %}

{% do c1.add_storage("/app/uploads", values.storage.uploads) %}
{% do rag.add_storage("/app/uploads", values.storage.uploads) %}
{% do perm_container.add_or_skip_action("uploads", values.storage.uploads, perms_config) %}

{% do c1.add_storage("/app/api/logs", values.storage.logs) %}
{% do c1.add_storage("/app/logs", values.storage.logs) %}
{% do perm_container.add_or_skip_action("logs", values.storage.logs, perms_config) %}

{% do rag.set_user(values.run_as.user, values.run_as.group) %}
{% do rag.healthcheck.set_test("http", {"port": values.consts.rag_port_number, "path": "/health"}) %}
{% do rag.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}

{% do rag.environment.add_env("RAG_HOST", "0.0.0.0") %}
{% do rag.environment.add_env("RAG_PORT", values.consts.rag_port_number) %}
{% do rag.environment.add_env("COLLECTION_NAME", values.consts.db_name) %}
{% do rag.environment.add_env("DB_HOST", values.consts.postgres_container_name) %}
{% do rag.environment.add_env("DB_PORT", postgres.get_port()) %}
{% do rag.environment.add_env("POSTGRES_DB", values.consts.db_name) %}
{% do rag.environment.add_env("POSTGRES_USER", values.consts.db_user) %}
{% do rag.environment.add_env("POSTGRES_PASSWORD", values.librechat.pg_db_password) %}
{% do rag.environment.add_env("OPENAI_API_KEY", "test") %}
{% do rag.environment.add_user_envs(values.librechat.additional_envs) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do rag.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do mongo.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do meilisearch.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
