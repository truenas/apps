{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.unmanic_container_name, "image") %}
{% do c1.add_caps(["CHOWN", "FOWNER", "DAC_OVERRIDE", "SETGID", "SETUID"]) %}
{% do c1.healthcheck.set_test("curl", {"port": values.consts.internal_web_port, "path": "/unmanic/api/v2/version/read"}) %}
{% do c1.environment.add_user_envs(values.unmanic.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.add_port(values.network.web_port, {"container_port": values.consts.internal_web_port}) %}
{% endif %}

{% do c1.add_storage("/config", values.storage.config) %}
{% do c1.add_storage("/library", values.storage.library) %}
{% do c1.add_storage("/tmp/unmanic", values.storage.encode_cache) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add(values.network.web_port, {"port": values.consts.internal_web_port if values.network.host_network else None}) %}

{{ tpl.render() | tojson }}
