{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.yamtrack_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.yamtrack.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, values.yamtrack.postgres_image_selector, pg_config, perm_container) %}

{% set redis_config = {
  "password": values.yamtrack.redis_password,
  "volume": tpl.funcs.temp_config("redis-data"),
} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% do c1.add_caps(["CHOWN", "SETUID", "SETGID", "FOWNER", "DAC_OVERRIDE"]) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}
{% do c1.environment.add_env("SECRET", values.yamtrack.secret) %}
{% do c1.environment.add_env("REDIS_URL", redis.get_url("redis")) %}
{% do c1.environment.add_env("DB_HOST", values.consts.postgres_container_name) %}
{% do c1.environment.add_env("DB_PORT", 5432) %}
{% do c1.environment.add_env("DB_USER", values.consts.db_user) %}
{% do c1.environment.add_env("DB_PASSWORD", values.yamtrack.db_password) %}
{% do c1.environment.add_env("DB_NAME", values.consts.db_name) %}

{% do c1.healthcheck.set_test("wget", {"port": values.consts.internal_web_port, "path": "/health"}) %}
{% do c1.environment.add_user_envs(values.yamtrack.additional_envs) %}

{% do c1.add_port(values.network.web_port, {"container_port": values.consts.internal_web_port}) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do redis.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
