{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.playwright_container_name, values.playwright.image_selector) %}
{% do c1.set_init(true) %}
{% do c1.set_ipc_mode("host") %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% set variant = values.playwright.image_selector | replace("_image", "") %}
{% set version = values.images[values.playwright.image_selector].tag | replace(variant, "") | trim("v") | trim("-") %}

{% set health_path = "/" %}
{% set base_cmd = "cd %s && npx -y playwright@%s" | format(values.consts.pwuser_home_path, version) %}
{% set mode_cmd = "run-server --port=%s --host=0.0.0.0" | format(values.network.web_port.port_number) %}

{% if values.playwright.mode == "ui" %}
  {% set health_path = "/trace/playwright-logo.svg" %}
  {% set mode_cmd = "test --ui --ui-port=%s --ui-host=0.0.0.0" | format(values.network.web_port.port_number) %}
  {% do tpl.portals.add_portal({"port": values.network.web_port.port_number}) %}
{% endif %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}

{% do c1.set_entrypoint(["/bin/sh", "-c"]) %}
{% do c1.set_command(["%s %s" | format(base_cmd, mode_cmd)]) %}
{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port.port_number, "path": health_path}) %}

{% do c1.environment.add_env("npm_config_cache", "%s/.npm" | format(values.consts.pwuser_home_path)) %}
{% do c1.environment.add_user_envs(values.playwright.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.pwuser_home_path, values.storage.pwuser_home) %}
{% do perm_container.add_or_skip_action("pwuser_home", values.storage.pwuser_home, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
