{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.tiny_media_manager_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.add_caps(["CHOWN", "SETGID", "SETUID"]) %}
{% do c1.healthcheck.set_test("wget", {"port": values.consts.internal_web_port, "path": "/dashboard"}) %}
{% do c1.environment.add_env("PASSWORD", values.tiny_media_manager.password) %}
{% do c1.environment.add_user_envs(values.tiny_media_manager.additional_envs) %}


{% if not values.network.host_network %}
  {% do c1.ports.add_port(values.network.web_port, values.consts.internal_web_port) %}
{% endif %}

{% do c1.add_storage("/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perm_config) %}

{% set nginx_temp_store = {"type": "temporary", "volume_config": {"volume_name": "tmm-nginx-temp"}} %}
{% do c1.add_storage("/var/log/nginx", nginx_temp_store) %}
{% do perm_container.add_or_skip_action("var-log-nginx", nginx_temp_store, dict(perm_config, **{"chmod": "0777"})) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.consts.internal_web_port if values.network.host_network else values.network.web_port}) %}

{{ tpl.render() | tojson }}
