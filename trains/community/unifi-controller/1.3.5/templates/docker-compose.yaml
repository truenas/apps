{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.unifi_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perm_config = {"uid": values.consts.user_id, "gid": values.consts.group_id, "mode": "check"} %}

{% do c1.set_user(values.consts.user_id, values.consts.group_id) %}
{% do c1.healthcheck.set_custom_test("/usr/local/bin/docker-healthcheck.sh") %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}
{% endif %}

{% do c1.environment.add_env("DB_MONGO_LOCAL", true) %}
{% do c1.environment.add_env("RUN_CHOWN", false) %}
{% do c1.environment.add_env("RUNAS_UID0", false) %}
{% do c1.environment.add_env("UNIFI_HTTP_PORT", values.network.web_http_port) %}
{% do c1.environment.add_env("UNIFI_HTTPS_PORT", values.network.web_https_port) %}
{% do c1.environment.add_env("UNIFI_THROUGHPUT_PORT", values.network.throughput_port) %}
{% do c1.environment.add_env("PORTAL_HTTP_PORT", values.network.portal_http_port) %}
{% do c1.environment.add_env("PORTAL_HTTPS_PORT", values.network.portal_https_port) %}
{% do c1.environment.add_user_envs(values.unifi.additional_envs) %}

{% do c1.ports.add_port(values.network.web_https_port, values.network.web_https_port) %}
{% do c1.ports.add_port(values.network.portal_https_port, values.network.portal_https_port) %}

{% if values.network.enable_web_http %}
  {% do c1.ports.add_port(values.network.web_http_port, values.network.web_http_port) %}
{% endif %}

{% if values.network.enable_portal_http %}
  {% do c1.ports.add_port(values.network.portal_http_port, values.network.portal_http_port) %}
{% endif %}

{% if values.network.enable_throughput %}
  {% do c1.ports.add_port(values.network.throughput_port, values.network.throughput_port) %}
{% endif %}

{% do c1.add_storage("/usr/lib/unifi/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perm_config) %}

{% do c1.add_storage("/usr/lib/unifi/logs", {"type": "anonymous"}) %}
{# Mounted secrets are combined into a java keystore at startup, this makes it writeable #}
{% do c1.add_storage("/usr/lib/unifi/cert", {"type": "anonymous"}) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perm_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_https_port, "scheme": "https"}) %}

{{ tpl.render() | tojson }}
