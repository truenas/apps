{% set tpl = ix_lib.base.render.Render(values) %}
{% set app_funcs = ix_lib.community["ddns-updater"].config.Config(tpl, values) %}

{% set providers_config = app_funcs.get_providers_config(values.ddns.config) %}

{% set c1 = tpl.add_container(values.consts.ddns_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% if values.ci %}
  {% do c1.healthcheck.disable() %}
{% else %}
  {% do c1.healthcheck.set_custom_test(["CMD","/updater/ddns-updater", "healthcheck"]) %}
{% endif %}

{% do c1.environment.add_env("LISTENING_ADDRESS", ":%s" | format(values.network.web_port)) %}
{% do c1.environment.add_env("DATADIR", values.consts.data_path) %}
{% do c1.environment.add_env("BACKUP_DIRECTORY", values.consts.data_path) %}
{% do c1.environment.add_env("PERIOD", values.ddns.period) %}
{% do c1.environment.add_env("BACKUP_PERIOD", values.ddns.backup_period) %}
{% do c1.environment.add_env("HTTP_TIMEOUT", values.ddns.http_timeout) %}
{% do c1.environment.add_env("UPDATE_COOLDOWN_PERIOD", values.ddns.update_cooldown_period) %}
{% do c1.environment.add_env("SHOUTRRR_ADDRESSES", values.ddns.shoutrrr_addresses | join(",")) %}
{% do c1.environment.add_env("PUBLIC_DNS_TIMEOUT", values.ddns.public_dns_timeout) %}
{% do c1.environment.add_env("PUBLICIP_DNS_PROVIDERS", app_funcs.get_public_ip_providers(category="PUBLICIP_DNS_PROVIDERS", items=values.ddns.public_ip_dns_providers)) %}
{% do c1.environment.add_env("PUBLICIP_HTTP_PROVIDERS", app_funcs.get_public_ip_providers(values.ddns.public_ip_http_providers)) %}
{% do c1.environment.add_env("PUBLICIPV4_HTTP_PROVIDERS", app_funcs.get_public_ip_providers(values.ddns.public_ipv4_http_providers)) %}
{% do c1.environment.add_env("PUBLICIPV6_HTTP_PROVIDERS", app_funcs.get_public_ip_providers(values.ddns.public_ipv6_http_providers)) %}
{% do c1.environment.add_env("PUBLICIP_FETCHERS", app_funcs.get_public_ip_providers(values.ddns.public_ip_fetchers)) %}
{% do c1.environment.add_env("CONFIG", providers_config | tojson) %}
{% do c1.environment.add_user_envs(values.ddns.additional_envs) %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
