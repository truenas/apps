{% from "macros/setup.py.jinja" import setup_script %}

{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.filestash_container_name, "image") %}
{% set setup = tpl.add_container(values.consts.setup_container_name, "python_image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% do c1.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do setup.set_user(values.consts.run_as_user, values.consts.run_as_group) %}
{% do setup.healthcheck.disable() %}

{% do setup.configs.add("config_setup", setup_script(values), "/setup.py", "0777") %}
{% do setup.restart.set_policy("on-failure", 1) %}
{% do setup.set_entrypoint(["python3", "/setup.py"]) %}

{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check", "chmod": "0777"} %}

{% do c1.add_storage(values.consts.data_dir, values.storage.state) %}
{% do setup.add_storage(values.consts.data_dir, values.storage.state) %}
{% do perm_container.add_or_skip_action("state", values.storage.state, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% do c1.environment.add_user_envs(values.filestash.additional_envs) %}

{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port, "path": "/healthz"}) %}
{% do c1.depends.add_dependency(values.consts.setup_container_name, "service_completed_successfully") %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do setup.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
