{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.traccar_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.traccar.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.traccar.postgres_image_selector,
  pg_config, perm_container
) %}

{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port.port_number, "path": "/api/server"}) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}

{% do c1.environment.add_env("LOGGER_CONSOLE", true) %}
{% do c1.environment.add_env("CONFIG_USE_ENVIRONMENT_VARIABLES", true) %}
{% do c1.environment.add_env("DATABASE_DRIVER", "org.postgresql.Driver") %}
{% do c1.environment.add_env("DATABASE_URL", "jdbc:postgresql://%s/%s"|format(values.consts.postgres_container_name, values.consts.db_name)) %}
{% do c1.environment.add_env("DATABASE_USER", values.consts.db_user) %}
{% do c1.environment.add_env("DATABASE_PASSWORD", values.traccar.db_password) %}
{% do c1.environment.add_env("WEB_PORT", values.network.web_port.port_number) %}
{% do c1.environment.add_user_envs(values.traccar.additional_envs) %}

{% do c1.add_port(values.network.web_port) %}
{% for port_range in values.network.additional_port_ranges %}
  {% if port_range.start > port_range.end %}
    {% do tpl.funcs.fail("Expected [additional_port_ranges.%d.start] to be less than [additional_port_ranges.%d.end], but got [%d] and [%d]" | format(loop.index0, loop.index0, port_range.start, port_range.end)) %}
  {% endif %}

  {% for port in range(port_range.start, port_range.end+1) %}
    {% do c1.add_port({
      "port_number": port,
      "protocol": port_range.protocol,
      "bind_mode": port_range.bind_mode,
      "host_ips": port_range.host_ips,
    }) %}
  {% endfor %}
{% endfor %}

{% do c1.add_storage("/opt/traccar/data", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
