{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.homarr_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID"]) %}
{% if values.homarr.mount_docker_socket %}
  {% do c1.add_docker_socket(read_only=False) %}
{% endif %}
{% do c1.healthcheck.set_test("wget", {"port": values.consts.internal_web_port, "path": "/api/health/live"}) %}

{% do c1.environment.add_env("SECRET_ENCRYPTION_KEY", values.homarr.secret_encryption_key) %}
{% do c1.environment.add_env("DB_DRIVER", "better-sqlite3") %}
{% do c1.environment.add_env("DB_DIALECT", "sqlite") %}
{% do c1.environment.add_env("DB_URL", "/appdata/db/db.sqlite") %}
{% do c1.environment.add_user_envs(values.homarr.additional_envs) %}

{% do c1.add_port(values.network.web_port, {"container_port": values.consts.internal_web_port}) %}

{% do c1.add_storage("/appdata", values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.consts.internal_web_port if values.network.host_network else values.network.web_port.port_number}) %}

{{ tpl.render() | tojson }}
