{% set tpl = ix_lib.base.render.Render(values) %}

{% do tpl.funcs.require_no_reserved(values.rest_server.extra_options, "Extra Options", values.consts.reserved_options, starts_with=true) %}

{% set c1 = tpl.add_container(values.consts.restic_rest_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}
{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% set scheme = "https" if values.network.certificate_id else "http" %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_custom_test("pgrep rest-server") %}

{% set options = namespace(x=[
  "--listen=:%d"|format(values.network.web_port.port_number),
  "--append-only=%s"|format(values.rest_server.append_only|string|lower),
  "--group-accessible-repos=%s"|format(values.rest_server.group_accessible_repos|string|lower),
  "--private-repos=%s"|format(values.rest_server.private_repos|string|lower),
]) %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}
  {% do options.x.extend(["--tls=true", "--tls-key=%s"|format(values.consts.ssl_key_path), "--tls-cert=%s"|format(values.consts.ssl_cert_path)]) %}
{% endif %}

{% if values.rest_server.no_auth %}
  {% do options.x.append("--no-auth") %}
{% elif values.rest_server.users %}
  {% set users = namespace(x=[]) %}
  {% for user in values.rest_server.users %}
    {% do users.x.append(tpl.funcs.htpasswd(user.username, user.password)) %}
  {% endfor %}

  {% do c1.configs.add("htpasswd", users.x | join("\n"), values.consts.htpasswd_path) %}
  {% do c1.environment.add_env("PASSWORD_FILE", values.consts.htpasswd_path) %}
{% elif values.rest_server.proxy_auth_username %}
  {% do options.x.extend(["--proxy-auth-username", values.rest_server.proxy_auth_username]) %}
{% endif %}

{% do options.x.extend(values.rest_server.extra_options) %}
{% do c1.environment.add_env("OPTIONS", options.x | join(" ")) %}
{% do c1.environment.add_env("DATA_DIRECTORY", values.consts.data_path) %}

{% do c1.add_port(values.network.web_port) %}

{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{{ tpl.render() | tojson }}
