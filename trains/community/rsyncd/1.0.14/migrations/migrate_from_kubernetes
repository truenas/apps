#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "rsyncd": {
            "aux_params": config["rsyncConfig"].get("auxParams", []),
            "rsync_modules": [
                {
                    "name": mod.get("name", ""),
                    "enabled": mod["enabled"],
                    "comment": mod.get("comment", ""),
                    "host_path": mod.get("hostPath", ""),
                    "access_mode": mod.get("accessMode", "RO"),
                    "max_connections": mod.get("maxConnections", 0),
                    "uid": mod.get("uid", 0),
                    "gid": mod.get("gid", 0),
                    "hosts_allow": mod.get("hostsAllow", []),
                    "hosts_deny": mod.get("hostsDeny", []),
                    "aux_params": mod.get("auxParams", []),
                }
                for mod in config["rsyncModules"]
            ],
            "additional_envs": config["rsyncConfig"].get("additionalEnvs", []),
        },
        "network": {
            "host_network": config["rsyncNetwork"].get("hostNetwork", False),
            "rsync_port": config["rsyncNetwork"].get("rsyncPort", 30026),
        },
        "resources": migrate_resources(config["resources"]),
    }

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
