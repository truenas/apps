#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "TZ": config["TZ"],
        "fscrawler": {
            "additional_envs": config["fscrawlerConfig"].get("additionalEnvs", []),
            "image_selector": (
                "no_ocr_image"
                if config["fscrawlerConfig"]["imageSelector"] == "noocrImage"
                else "image"
            ),
            "job_name": config["fscrawlerConfig"]["jobName"],
            "loop": config["fscrawlerConfig"]["loop"],
            "restart": config["fscrawlerConfig"]["restart"],
        },
        "network": {
            "host_network": config["fscrawlerNetwork"]["hostNetwork"],
            "enable_rest": config["fscrawlerNetwork"]["enableRestApiService"],
            "rest_port": config["fscrawlerNetwork"].get("restPort", 30084),
        },
        "storage": {
            "jobs": migrate_storage_item(config["fscrawlerStorage"]["jobs"]),
            "additional_storage": [
                migrate_storage_item(item, include_read_only=True)
                for item in config["fscrawlerStorage"]["additionalStorages"]
            ],
        },
        "resources": migrate_resources(config["resources"]),
    }

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
