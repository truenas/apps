{% set tpl = ix_lib.base.render.Render(values) %}

{% if values.n8n.web_host.startswith("https://") or values.n8n.web_host.startswith("http://") %}
  {% do tpl.funcs.fail("Expected [n8n.web_host] to not start with [http(s)://]") %}
{% endif %}
{% if values.n8n.web_host.endswith("/") %}
  {% do tpl.funcs.fail("Expected [n8n.web_host] to not end with [/]") %}
{% endif %}
{% if ":" in values.n8n.web_host %}
  {% do tpl.funcs.fail("Expected [n8n.web_host] to not contain port [:###]") %}
{% endif %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.n8n.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(values.consts.postgres_container_name, "postgres_image", pg_config, perm_container) %}

{% set redis_config = {
  "password": values.n8n.redis_password,
  "volume": {"type": "temporary", "volume_config": {"volume_name": "redis-data"}},
} %}
{% set redis = tpl.deps.redis(values.consts.redis_container_name, "redis_image", redis_config, perm_container) %}

{% set proto = "https" if values.network.certificate_id else "http" %}

{% set c1 = tpl.add_container(values.consts.n8n_container_name, "image") %}
{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port, "path": "/healthz", "scheme": proto}) %}

{% do c1.environment.add_env("NODE_ENV", "production") %}
{% do c1.environment.add_env("N8N_PATH", "/") %}
{% do c1.environment.add_env("N8N_PORT", values.network.web_port) %}
{% do c1.environment.add_env("N8N_HOST", values.n8n.web_host) %}
{% do c1.environment.add_env("GENERIC_TIMEZONE", values.TZ) %}
{% do c1.environment.add_env("N8N_SECURE_COOKIE", values.network.certificate_id != None) %}
{% do c1.environment.add_env("N8N_PROTOCOL", "https" if values.network.certificate_id else "http") %}
{% do c1.environment.add_env("N8N_USER_FOLDER", values.consts.data_path) %}
{% do c1.environment.add_env("DB_TYPE", "postgresdb") %}
{% do c1.environment.add_env("EXECUTIONS_MODE", "regular") %}
{% do c1.environment.add_env("N8N_ENCRYPTION_KEY", values.n8n.encryption_key) %}
{% do c1.environment.add_env("DB_POSTGRESDB_USER", values.consts.db_user) %}
{% do c1.environment.add_env("DB_POSTGRESDB_PASSWORD", values.n8n.db_password) %}
{% do c1.environment.add_env("DB_POSTGRESDB_DATABASE", values.consts.db_name) %}
{% do c1.environment.add_env("DB_POSTGRESDB_HOST", values.consts.postgres_container_name) %}
{% do c1.environment.add_env("DB_POSTGRESDB_PORT", 5432) %}
{% do c1.environment.add_env("DEBUG", "true") %}
{% do c1.environment.add_env("QUEUE_BULL_REDIS_USERNAME", "default") %}
{% do c1.environment.add_env("QUEUE_BULL_REDIS_DB", 0) %}
{% do c1.environment.add_env("QUEUE_BULL_REDIS_PORT", 6379) %}
{% do c1.environment.add_env("QUEUE_BULL_REDIS_HOST", values.consts.redis_container_name) %}
{% do c1.environment.add_env("QUEUE_BULL_REDIS_PASSWORD", values.n8n.redis_password) %}
{% if values.network.certificate_id %}
  {% do c1.environment.add_env("N8N_SSL_KEY", values.consts.ssl_key_path) %}
  {% do c1.environment.add_env("N8N_SSL_CERT", values.consts.ssl_cert_path) %}
{% endif %}

{% do c1.environment.add_user_envs(values.n8n.additional_envs) %}

{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.depends.add_dependency(values.consts.redis_container_name, "service_healthy") %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% do perm_container.add_or_skip_action("data", values.storage.data, perms_config) %}

{% do c1.add_storage("/tmp", {"type": "anonymous"}) %}
{% do c1.add_storage("/.cache", {"type": "anonymous"}) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
  {% do perm_container.add_or_skip_action(store.mount_path, store, perms_config) %}
{% endfor %}

{% if values.network.certificate_id %}
  {% set cert = values.ix_certificates[values.network.certificate_id] %}
  {% do c1.configs.add("private", cert.privatekey, values.consts.ssl_key_path) %}
  {% do c1.configs.add("public", cert.certificate, values.consts.ssl_cert_path) %}
{% endif %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do redis.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.container.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "scheme": proto}) %}

{{ tpl.render() | tojson }}
