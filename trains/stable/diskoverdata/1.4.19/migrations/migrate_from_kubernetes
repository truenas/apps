#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.dns_config import migrate_dns_config
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "TZ": config["TZ"],
        "diskover_data": {
            "cron_schedule": config["diskoverConfig"].get("cronSchedule", "0 3 * * * *"),
            "additional_envs": config["diskoverConfig"].get("additionalEnvs", []),
        },
        "run_as": {
            "user": config["diskoverID"].get("user", 568),
            "group": config["diskoverID"].get("group", 568),
        },
        "network": {
            "web_port": config["diskoverNetwork"].get("webPort", 32400),
            "dns_opts": migrate_dns_config(config["podOptions"].get("dnsConfig", {})),
        },
        "storage": {
            "config": migrate_storage_item(config["diskoverStorage"]["config"]),
            "data": migrate_storage_item(config["diskoverStorage"]["data"]),
            "es_data": migrate_storage_item(config["diskoverStorage"]["esdata"]),
            "additional_storage": [],
        },
        "resources": migrate_resources(config["resources"]),
    }

    for item in config["diskoverStorage"]["additionalStorages"]:
        new_store = migrate_storage_item(item, include_read_only=True)
        new_store["index_data"] = item.get("diskoverDataIndex", False)
        new_values["storage"]["additional_storage"].append(new_store)

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
