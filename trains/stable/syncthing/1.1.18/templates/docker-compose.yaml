{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.syncthing_container_name, "image") %}
{% do c1.remove_security_opt("no-new-privileges") %}
{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETUID", "SETGID", "SETPCAP", "SETFCAP", "SYS_ADMIN"]) %}
{% do c1.healthcheck.set_test("wget", {"port": values.network.web_port, "path": "/rest/noauth/health"}) %}
{% do c1.environment.add_env("STNOUPGRADE", true) %}
{% do c1.environment.add_env("STGUIADDRESS", "0.0.0.0:%s"|format(values.network.web_port)) %}
{% do c1.environment.add_user_envs(values.syncthing.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
  {% do c1.ports.add_port(values.network.tcp_port, 22000) %}
  {% do c1.ports.add_port(values.network.udp_port, 22000, {"protocol": "udp"}) %}
{% endif %}

{% do c1.add_storage("/var/syncthing", values.storage.config) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_port}) %}

{{ tpl.render() | tojson }}
