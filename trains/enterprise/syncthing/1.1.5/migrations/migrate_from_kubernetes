#!/usr/bin/python3

import os
import sys
import yaml

from migration_helpers.resources import migrate_resources
from migration_helpers.storage import migrate_storage_item


def migrate(values):
    config = values.get("helm_secret", {}).get("config", {})
    if not config:
        raise ValueError("No config found in values")

    new_values = {
        "TZ": config["TZ"],
        "syncthing": {
            "additional_envs": config.get("additionalEnvs", []),
        },
        "run_as": {
            "user": config["syncthingID"].get("user", 568),
            "group": config["syncthingID"].get("group", 568),
        },
        "network": {
            "host_network": config["syncthingNetwork"]["hostNetwork"],
            "web_port": config["syncthingNetwork"]["webPort"],
            "tcp_port": config["syncthingNetwork"].get("tcpPort", 22000),
            "quic_port": config["syncthingNetwork"].get("quicPort", 22000),
            "certificate_id": config["syncthingNetwork"].get("certificateID", None),
        },
        "storage": {
            "home": migrate_storage_item(config["syncthingStorage"]["home"]),
            "additional_storage": [],
        },
        "resources": migrate_resources(config["resources"]),
    }

    for old_item in config["syncthingStorage"].get("additionalStorages", []):
        new_item = migrate_storage_item(old_item, include_read_only=True)
        if new_item["type"] == "cifs":
            new_migration_mode = old_item.get("smbConfig", {}).get("migrationMode", False)
            assert isinstance(new_item["cifs_config"], dict), "something went wrong"
            new_item["cifs_config"].update({"migration_mode": new_migration_mode})

        new_values["storage"]["additional_storage"].append(new_item)

    return new_values


if __name__ == "__main__":
    if len(sys.argv) != 2:
        exit(1)

    if os.path.exists(sys.argv[1]):
        with open(sys.argv[1], "r") as f:
            print(yaml.dump(migrate(yaml.safe_load(f.read()))))
